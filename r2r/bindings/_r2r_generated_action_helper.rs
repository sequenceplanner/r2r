impl UntypedActionSupport { pub fn new_from (typename : & str) -> Result < Self > { # [allow (non_snake_case)] fn new_untyped_service_support_action_tutorials_interfaces_action_Fibonacci () -> UntypedActionSupport { UntypedActionSupport :: new :: < action_tutorials_interfaces :: action :: Fibonacci :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_autoware_auto_msgs_action_PlanTrajectory () -> UntypedActionSupport { UntypedActionSupport :: new :: < autoware_auto_msgs :: action :: PlanTrajectory :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_control_msgs_action_FollowJointTrajectory () -> UntypedActionSupport { UntypedActionSupport :: new :: < control_msgs :: action :: FollowJointTrajectory :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_control_msgs_action_GripperCommand () -> UntypedActionSupport { UntypedActionSupport :: new :: < control_msgs :: action :: GripperCommand :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_control_msgs_action_JointTrajectory () -> UntypedActionSupport { UntypedActionSupport :: new :: < control_msgs :: action :: JointTrajectory :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_control_msgs_action_PointHead () -> UntypedActionSupport { UntypedActionSupport :: new :: < control_msgs :: action :: PointHead :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_control_msgs_action_SingleJointPosition () -> UntypedActionSupport { UntypedActionSupport :: new :: < control_msgs :: action :: SingleJointPosition :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_example_interfaces_action_Fibonacci () -> UntypedActionSupport { UntypedActionSupport :: new :: < example_interfaces :: action :: Fibonacci :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_grbl_msgs_action_SendGcodeCmd () -> UntypedActionSupport { UntypedActionSupport :: new :: < grbl_msgs :: action :: SendGcodeCmd :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_grbl_msgs_action_SendGcodeFile () -> UntypedActionSupport { UntypedActionSupport :: new :: < grbl_msgs :: action :: SendGcodeFile :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_irobot_create_msgs_action_AudioNoteSequence () -> UntypedActionSupport { UntypedActionSupport :: new :: < irobot_create_msgs :: action :: AudioNoteSequence :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_irobot_create_msgs_action_DockServo () -> UntypedActionSupport { UntypedActionSupport :: new :: < irobot_create_msgs :: action :: DockServo :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_irobot_create_msgs_action_DriveArc () -> UntypedActionSupport { UntypedActionSupport :: new :: < irobot_create_msgs :: action :: DriveArc :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_irobot_create_msgs_action_DriveDistance () -> UntypedActionSupport { UntypedActionSupport :: new :: < irobot_create_msgs :: action :: DriveDistance :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_irobot_create_msgs_action_LedAnimation () -> UntypedActionSupport { UntypedActionSupport :: new :: < irobot_create_msgs :: action :: LedAnimation :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_irobot_create_msgs_action_NavigateToPosition () -> UntypedActionSupport { UntypedActionSupport :: new :: < irobot_create_msgs :: action :: NavigateToPosition :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_irobot_create_msgs_action_RotateAngle () -> UntypedActionSupport { UntypedActionSupport :: new :: < irobot_create_msgs :: action :: RotateAngle :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_irobot_create_msgs_action_Undock () -> UntypedActionSupport { UntypedActionSupport :: new :: < irobot_create_msgs :: action :: Undock :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_irobot_create_msgs_action_WallFollow () -> UntypedActionSupport { UntypedActionSupport :: new :: < irobot_create_msgs :: action :: WallFollow :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_kobuki_ros_interfaces_action_AutoDocking () -> UntypedActionSupport { UntypedActionSupport :: new :: < kobuki_ros_interfaces :: action :: AutoDocking :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_action_ExecuteTrajectory () -> UntypedActionSupport { UntypedActionSupport :: new :: < moveit_msgs :: action :: ExecuteTrajectory :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_action_GlobalPlanner () -> UntypedActionSupport { UntypedActionSupport :: new :: < moveit_msgs :: action :: GlobalPlanner :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_action_HybridPlanner () -> UntypedActionSupport { UntypedActionSupport :: new :: < moveit_msgs :: action :: HybridPlanner :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_action_LocalPlanner () -> UntypedActionSupport { UntypedActionSupport :: new :: < moveit_msgs :: action :: LocalPlanner :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_action_MoveGroup () -> UntypedActionSupport { UntypedActionSupport :: new :: < moveit_msgs :: action :: MoveGroup :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_action_MoveGroupSequence () -> UntypedActionSupport { UntypedActionSupport :: new :: < moveit_msgs :: action :: MoveGroupSequence :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_action_Pickup () -> UntypedActionSupport { UntypedActionSupport :: new :: < moveit_msgs :: action :: Pickup :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_action_Place () -> UntypedActionSupport { UntypedActionSupport :: new :: < moveit_msgs :: action :: Place :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav2_msgs_action_BackUp () -> UntypedActionSupport { UntypedActionSupport :: new :: < nav2_msgs :: action :: BackUp :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav2_msgs_action_ComputePathThroughPoses () -> UntypedActionSupport { UntypedActionSupport :: new :: < nav2_msgs :: action :: ComputePathThroughPoses :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav2_msgs_action_ComputePathToPose () -> UntypedActionSupport { UntypedActionSupport :: new :: < nav2_msgs :: action :: ComputePathToPose :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav2_msgs_action_DummyRecovery () -> UntypedActionSupport { UntypedActionSupport :: new :: < nav2_msgs :: action :: DummyRecovery :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav2_msgs_action_FollowPath () -> UntypedActionSupport { UntypedActionSupport :: new :: < nav2_msgs :: action :: FollowPath :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav2_msgs_action_FollowWaypoints () -> UntypedActionSupport { UntypedActionSupport :: new :: < nav2_msgs :: action :: FollowWaypoints :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav2_msgs_action_NavigateThroughPoses () -> UntypedActionSupport { UntypedActionSupport :: new :: < nav2_msgs :: action :: NavigateThroughPoses :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav2_msgs_action_NavigateToPose () -> UntypedActionSupport { UntypedActionSupport :: new :: < nav2_msgs :: action :: NavigateToPose :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav2_msgs_action_Spin () -> UntypedActionSupport { UntypedActionSupport :: new :: < nav2_msgs :: action :: Spin :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav2_msgs_action_Wait () -> UntypedActionSupport { UntypedActionSupport :: new :: < nav2_msgs :: action :: Wait :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_object_recognition_msgs_action_ObjectRecognition () -> UntypedActionSupport { UntypedActionSupport :: new :: < object_recognition_msgs :: action :: ObjectRecognition :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_action_ExecutePlan () -> UntypedActionSupport { UntypedActionSupport :: new :: < plansys2_msgs :: action :: ExecutePlan :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_ros2cli_test_interfaces_action_ShortVariedMultiNested () -> UntypedActionSupport { UntypedActionSupport :: new :: < ros2cli_test_interfaces :: action :: ShortVariedMultiNested :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_teleop_tools_msgs_action_Increment () -> UntypedActionSupport { UntypedActionSupport :: new :: < teleop_tools_msgs :: action :: Increment :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_test_msgs_action_Fibonacci () -> UntypedActionSupport { UntypedActionSupport :: new :: < test_msgs :: action :: Fibonacci :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_test_msgs_action_NestedMessage () -> UntypedActionSupport { UntypedActionSupport :: new :: < test_msgs :: action :: NestedMessage :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_tf2_msgs_action_LookupTransform () -> UntypedActionSupport { UntypedActionSupport :: new :: < tf2_msgs :: action :: LookupTransform :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_turtlebot3_msgs_action_Patrol () -> UntypedActionSupport { UntypedActionSupport :: new :: < turtlebot3_msgs :: action :: Patrol :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_turtlesim_action_RotateAbsolute () -> UntypedActionSupport { UntypedActionSupport :: new :: < turtlesim :: action :: RotateAbsolute :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_ur_dashboard_msgs_action_SetMode () -> UntypedActionSupport { UntypedActionSupport :: new :: < ur_dashboard_msgs :: action :: SetMode :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_vda5050_connector_action_NavigateToNode () -> UntypedActionSupport { UntypedActionSupport :: new :: < vda5050_connector :: action :: NavigateToNode :: Action > () } # [allow (non_snake_case)] fn new_untyped_service_support_vda5050_connector_action_ProcessVDAAction () -> UntypedActionSupport { UntypedActionSupport :: new :: < vda5050_connector :: action :: ProcessVDAAction :: Action > () } static MAP : phf :: Map < & 'static str , fn () -> UntypedActionSupport > = phf :: phf_map ! { "action_tutorials_interfaces/action/Fibonacci" => new_untyped_service_support_action_tutorials_interfaces_action_Fibonacci , "autoware_auto_msgs/action/PlanTrajectory" => new_untyped_service_support_autoware_auto_msgs_action_PlanTrajectory , "control_msgs/action/FollowJointTrajectory" => new_untyped_service_support_control_msgs_action_FollowJointTrajectory , "control_msgs/action/GripperCommand" => new_untyped_service_support_control_msgs_action_GripperCommand , "control_msgs/action/JointTrajectory" => new_untyped_service_support_control_msgs_action_JointTrajectory , "control_msgs/action/PointHead" => new_untyped_service_support_control_msgs_action_PointHead , "control_msgs/action/SingleJointPosition" => new_untyped_service_support_control_msgs_action_SingleJointPosition , "example_interfaces/action/Fibonacci" => new_untyped_service_support_example_interfaces_action_Fibonacci , "grbl_msgs/action/SendGcodeCmd" => new_untyped_service_support_grbl_msgs_action_SendGcodeCmd , "grbl_msgs/action/SendGcodeFile" => new_untyped_service_support_grbl_msgs_action_SendGcodeFile , "irobot_create_msgs/action/AudioNoteSequence" => new_untyped_service_support_irobot_create_msgs_action_AudioNoteSequence , "irobot_create_msgs/action/DockServo" => new_untyped_service_support_irobot_create_msgs_action_DockServo , "irobot_create_msgs/action/DriveArc" => new_untyped_service_support_irobot_create_msgs_action_DriveArc , "irobot_create_msgs/action/DriveDistance" => new_untyped_service_support_irobot_create_msgs_action_DriveDistance , "irobot_create_msgs/action/LedAnimation" => new_untyped_service_support_irobot_create_msgs_action_LedAnimation , "irobot_create_msgs/action/NavigateToPosition" => new_untyped_service_support_irobot_create_msgs_action_NavigateToPosition , "irobot_create_msgs/action/RotateAngle" => new_untyped_service_support_irobot_create_msgs_action_RotateAngle , "irobot_create_msgs/action/Undock" => new_untyped_service_support_irobot_create_msgs_action_Undock , "irobot_create_msgs/action/WallFollow" => new_untyped_service_support_irobot_create_msgs_action_WallFollow , "kobuki_ros_interfaces/action/AutoDocking" => new_untyped_service_support_kobuki_ros_interfaces_action_AutoDocking , "moveit_msgs/action/ExecuteTrajectory" => new_untyped_service_support_moveit_msgs_action_ExecuteTrajectory , "moveit_msgs/action/GlobalPlanner" => new_untyped_service_support_moveit_msgs_action_GlobalPlanner , "moveit_msgs/action/HybridPlanner" => new_untyped_service_support_moveit_msgs_action_HybridPlanner , "moveit_msgs/action/LocalPlanner" => new_untyped_service_support_moveit_msgs_action_LocalPlanner , "moveit_msgs/action/MoveGroup" => new_untyped_service_support_moveit_msgs_action_MoveGroup , "moveit_msgs/action/MoveGroupSequence" => new_untyped_service_support_moveit_msgs_action_MoveGroupSequence , "moveit_msgs/action/Pickup" => new_untyped_service_support_moveit_msgs_action_Pickup , "moveit_msgs/action/Place" => new_untyped_service_support_moveit_msgs_action_Place , "nav2_msgs/action/BackUp" => new_untyped_service_support_nav2_msgs_action_BackUp , "nav2_msgs/action/ComputePathThroughPoses" => new_untyped_service_support_nav2_msgs_action_ComputePathThroughPoses , "nav2_msgs/action/ComputePathToPose" => new_untyped_service_support_nav2_msgs_action_ComputePathToPose , "nav2_msgs/action/DummyRecovery" => new_untyped_service_support_nav2_msgs_action_DummyRecovery , "nav2_msgs/action/FollowPath" => new_untyped_service_support_nav2_msgs_action_FollowPath , "nav2_msgs/action/FollowWaypoints" => new_untyped_service_support_nav2_msgs_action_FollowWaypoints , "nav2_msgs/action/NavigateThroughPoses" => new_untyped_service_support_nav2_msgs_action_NavigateThroughPoses , "nav2_msgs/action/NavigateToPose" => new_untyped_service_support_nav2_msgs_action_NavigateToPose , "nav2_msgs/action/Spin" => new_untyped_service_support_nav2_msgs_action_Spin , "nav2_msgs/action/Wait" => new_untyped_service_support_nav2_msgs_action_Wait , "object_recognition_msgs/action/ObjectRecognition" => new_untyped_service_support_object_recognition_msgs_action_ObjectRecognition , "plansys2_msgs/action/ExecutePlan" => new_untyped_service_support_plansys2_msgs_action_ExecutePlan , "ros2cli_test_interfaces/action/ShortVariedMultiNested" => new_untyped_service_support_ros2cli_test_interfaces_action_ShortVariedMultiNested , "teleop_tools_msgs/action/Increment" => new_untyped_service_support_teleop_tools_msgs_action_Increment , "test_msgs/action/Fibonacci" => new_untyped_service_support_test_msgs_action_Fibonacci , "test_msgs/action/NestedMessage" => new_untyped_service_support_test_msgs_action_NestedMessage , "tf2_msgs/action/LookupTransform" => new_untyped_service_support_tf2_msgs_action_LookupTransform , "turtlebot3_msgs/action/Patrol" => new_untyped_service_support_turtlebot3_msgs_action_Patrol , "turtlesim/action/RotateAbsolute" => new_untyped_service_support_turtlesim_action_RotateAbsolute , "ur_dashboard_msgs/action/SetMode" => new_untyped_service_support_ur_dashboard_msgs_action_SetMode , "vda5050_connector/action/NavigateToNode" => new_untyped_service_support_vda5050_connector_action_NavigateToNode , "vda5050_connector/action/ProcessVDAAction" => new_untyped_service_support_vda5050_connector_action_ProcessVDAAction } ; let func = MAP . get (typename) . ok_or_else (|| Error :: InvalidMessageType { msgtype : typename . into () }) ? ; Ok (func ()) } }