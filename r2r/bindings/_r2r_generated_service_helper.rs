impl UntypedServiceSupport { pub fn new_from (typename : & str) -> Result < Self > { # [allow (non_snake_case)] fn new_untyped_service_support_action_msgs_srv_CancelGoal () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < action_msgs :: srv :: CancelGoal :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_autoware_auto_msgs_srv_AutonomyModeChange () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < autoware_auto_msgs :: srv :: AutonomyModeChange :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_autoware_auto_msgs_srv_HADMapService () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < autoware_auto_msgs :: srv :: HADMapService :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_autoware_auto_msgs_srv_ModifyTrajectory () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < autoware_auto_msgs :: srv :: ModifyTrajectory :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_blickfeld_driver_srv_ImuStaticTransformation () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < blickfeld_driver :: srv :: ImuStaticTransformation :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_blickfeld_driver_srv_SetScanPattern () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < blickfeld_driver :: srv :: SetScanPattern :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_cartographer_ros_msgs_srv_FinishTrajectory () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < cartographer_ros_msgs :: srv :: FinishTrajectory :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_cartographer_ros_msgs_srv_StartTrajectory () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < cartographer_ros_msgs :: srv :: StartTrajectory :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_cartographer_ros_msgs_srv_SubmapQuery () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < cartographer_ros_msgs :: srv :: SubmapQuery :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_cartographer_ros_msgs_srv_WriteState () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < cartographer_ros_msgs :: srv :: WriteState :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_composition_interfaces_srv_ListNodes () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < composition_interfaces :: srv :: ListNodes :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_composition_interfaces_srv_LoadNode () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < composition_interfaces :: srv :: LoadNode :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_composition_interfaces_srv_UnloadNode () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < composition_interfaces :: srv :: UnloadNode :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_control_msgs_srv_QueryCalibrationState () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < control_msgs :: srv :: QueryCalibrationState :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_control_msgs_srv_QueryTrajectoryState () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < control_msgs :: srv :: QueryTrajectoryState :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_controller_manager_msgs_srv_ConfigureController () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < controller_manager_msgs :: srv :: ConfigureController :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_controller_manager_msgs_srv_ConfigureStartController () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < controller_manager_msgs :: srv :: ConfigureStartController :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_controller_manager_msgs_srv_ListControllerTypes () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < controller_manager_msgs :: srv :: ListControllerTypes :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_controller_manager_msgs_srv_ListControllers () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < controller_manager_msgs :: srv :: ListControllers :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_controller_manager_msgs_srv_ListHardwareInterfaces () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < controller_manager_msgs :: srv :: ListHardwareInterfaces :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_controller_manager_msgs_srv_LoadConfigureController () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < controller_manager_msgs :: srv :: LoadConfigureController :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_controller_manager_msgs_srv_LoadController () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < controller_manager_msgs :: srv :: LoadController :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_controller_manager_msgs_srv_LoadStartController () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < controller_manager_msgs :: srv :: LoadStartController :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_controller_manager_msgs_srv_ReloadControllerLibraries () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < controller_manager_msgs :: srv :: ReloadControllerLibraries :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_controller_manager_msgs_srv_SwitchController () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < controller_manager_msgs :: srv :: SwitchController :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_controller_manager_msgs_srv_UnloadController () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < controller_manager_msgs :: srv :: UnloadController :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_depthai_ros_msgs_srv_NormalizedImageCrop () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < depthai_ros_msgs :: srv :: NormalizedImageCrop :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_depthai_ros_msgs_srv_TriggerNamed () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < depthai_ros_msgs :: srv :: TriggerNamed :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_diagnostic_msgs_srv_AddDiagnostics () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < diagnostic_msgs :: srv :: AddDiagnostics :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_diagnostic_msgs_srv_SelfTest () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < diagnostic_msgs :: srv :: SelfTest :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_dwb_msgs_srv_DebugLocalPlan () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < dwb_msgs :: srv :: DebugLocalPlan :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_dwb_msgs_srv_GenerateTrajectory () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < dwb_msgs :: srv :: GenerateTrajectory :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_dwb_msgs_srv_GenerateTwists () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < dwb_msgs :: srv :: GenerateTwists :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_dwb_msgs_srv_GetCriticScore () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < dwb_msgs :: srv :: GetCriticScore :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_dwb_msgs_srv_ScoreTrajectory () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < dwb_msgs :: srv :: ScoreTrajectory :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_dynamixel_sdk_custom_interfaces_srv_GetPosition () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < dynamixel_sdk_custom_interfaces :: srv :: GetPosition :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_dynamixel_workbench_msgs_srv_DynamixelCommand () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < dynamixel_workbench_msgs :: srv :: DynamixelCommand :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_dynamixel_workbench_msgs_srv_GetDynamixelInfo () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < dynamixel_workbench_msgs :: srv :: GetDynamixelInfo :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_example_interfaces_srv_AddTwoInts () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < example_interfaces :: srv :: AddTwoInts :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_example_interfaces_srv_SetBool () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < example_interfaces :: srv :: SetBool :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_example_interfaces_srv_Trigger () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < example_interfaces :: srv :: Trigger :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_foros_msgs_srv_AppendEntries () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < foros_msgs :: srv :: AppendEntries :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_foros_msgs_srv_RequestVote () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < foros_msgs :: srv :: RequestVote :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_ApplyBodyWrench () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: ApplyBodyWrench :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_ApplyJointEffort () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: ApplyJointEffort :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_ApplyLinkWrench () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: ApplyLinkWrench :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_BodyRequest () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: BodyRequest :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_DeleteEntity () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: DeleteEntity :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_DeleteLight () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: DeleteLight :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_DeleteModel () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: DeleteModel :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_GetEntityState () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: GetEntityState :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_GetJointProperties () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: GetJointProperties :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_GetLightProperties () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: GetLightProperties :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_GetLinkProperties () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: GetLinkProperties :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_GetLinkState () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: GetLinkState :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_GetModelList () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: GetModelList :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_GetModelProperties () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: GetModelProperties :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_GetModelState () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: GetModelState :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_GetPhysicsProperties () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: GetPhysicsProperties :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_GetWorldProperties () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: GetWorldProperties :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_JointRequest () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: JointRequest :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_LinkRequest () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: LinkRequest :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_SetEntityState () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: SetEntityState :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_SetJointProperties () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: SetJointProperties :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_SetJointTrajectory () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: SetJointTrajectory :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_SetLightProperties () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: SetLightProperties :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_SetLinkProperties () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: SetLinkProperties :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_SetLinkState () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: SetLinkState :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_SetModelConfiguration () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: SetModelConfiguration :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_SetModelState () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: SetModelState :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_SetPhysicsProperties () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: SetPhysicsProperties :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_SpawnEntity () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: SpawnEntity :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_gazebo_msgs_srv_SpawnModel () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < gazebo_msgs :: srv :: SpawnModel :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_geographic_msgs_srv_GetGeoPath () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < geographic_msgs :: srv :: GetGeoPath :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_geographic_msgs_srv_GetGeographicMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < geographic_msgs :: srv :: GetGeographicMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_geographic_msgs_srv_GetRoutePlan () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < geographic_msgs :: srv :: GetRoutePlan :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_geographic_msgs_srv_UpdateGeographicMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < geographic_msgs :: srv :: UpdateGeographicMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_grbl_msgs_srv_Stop () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < grbl_msgs :: srv :: Stop :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_irobot_create_msgs_srv_EStop () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < irobot_create_msgs :: srv :: EStop :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_irobot_create_msgs_srv_ResetPose () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < irobot_create_msgs :: srv :: ResetPose :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_irobot_create_msgs_srv_RobotPower () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < irobot_create_msgs :: srv :: RobotPower :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_lifecycle_msgs_srv_ChangeState () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < lifecycle_msgs :: srv :: ChangeState :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_lifecycle_msgs_srv_GetAvailableStates () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < lifecycle_msgs :: srv :: GetAvailableStates :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_lifecycle_msgs_srv_GetAvailableTransitions () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < lifecycle_msgs :: srv :: GetAvailableTransitions :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_lifecycle_msgs_srv_GetState () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < lifecycle_msgs :: srv :: GetState :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_logging_demo_srv_ConfigLogger () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < logging_demo :: srv :: ConfigLogger :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_map_msgs_srv_GetMapROI () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < map_msgs :: srv :: GetMapROI :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_map_msgs_srv_GetPointMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < map_msgs :: srv :: GetPointMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_map_msgs_srv_GetPointMapROI () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < map_msgs :: srv :: GetPointMapROI :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_map_msgs_srv_ProjectedMapsInfo () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < map_msgs :: srv :: ProjectedMapsInfo :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_map_msgs_srv_SaveMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < map_msgs :: srv :: SaveMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_map_msgs_srv_SetMapProjections () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < map_msgs :: srv :: SetMapProjections :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mapviz_interfaces_srv_AddMapvizDisplay () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mapviz_interfaces :: srv :: AddMapvizDisplay :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_marti_nav_msgs_srv_DeleteRoute () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < marti_nav_msgs :: srv :: DeleteRoute :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_marti_nav_msgs_srv_GetRoute () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < marti_nav_msgs :: srv :: GetRoute :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_marti_nav_msgs_srv_GetRouteList () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < marti_nav_msgs :: srv :: GetRouteList :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_marti_nav_msgs_srv_PlanRoute () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < marti_nav_msgs :: srv :: PlanRoute :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_marti_nav_msgs_srv_SaveRecordedRoute () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < marti_nav_msgs :: srv :: SaveRecordedRoute :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_marti_nav_msgs_srv_SaveRoute () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < marti_nav_msgs :: srv :: SaveRoute :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_marti_nav_msgs_srv_SetRoute () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < marti_nav_msgs :: srv :: SetRoute :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_marti_nav_msgs_srv_UpdateRouteMetadata () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < marti_nav_msgs :: srv :: UpdateRouteMetadata :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_marti_sensor_msgs_srv_SetExposure () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < marti_sensor_msgs :: srv :: SetExposure :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_CommandAck () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: CommandAck :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_CommandBool () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: CommandBool :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_CommandHome () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: CommandHome :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_CommandInt () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: CommandInt :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_CommandLong () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: CommandLong :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_CommandTOL () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: CommandTOL :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_CommandTriggerControl () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: CommandTriggerControl :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_CommandTriggerInterval () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: CommandTriggerInterval :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_CommandVtolTransition () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: CommandVtolTransition :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_EndpointAdd () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: EndpointAdd :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_EndpointDel () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: EndpointDel :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_FileChecksum () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: FileChecksum :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_FileClose () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: FileClose :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_FileList () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: FileList :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_FileMakeDir () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: FileMakeDir :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_FileOpen () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: FileOpen :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_FileRead () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: FileRead :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_FileRemove () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: FileRemove :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_FileRemoveDir () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: FileRemoveDir :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_FileRename () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: FileRename :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_FileTruncate () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: FileTruncate :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_FileWrite () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: FileWrite :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_LogRequestData () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: LogRequestData :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_LogRequestEnd () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: LogRequestEnd :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_LogRequestList () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: LogRequestList :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_MessageInterval () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: MessageInterval :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_MountConfigure () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: MountConfigure :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_ParamGet () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: ParamGet :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_ParamPull () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: ParamPull :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_ParamPush () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: ParamPush :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_ParamSet () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: ParamSet :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_ParamSetV2 () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: ParamSetV2 :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_SetMavFrame () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: SetMavFrame :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_SetMode () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: SetMode :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_StreamRate () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: StreamRate :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_VehicleInfoGet () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: VehicleInfoGet :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_WaypointClear () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: WaypointClear :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_WaypointPull () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: WaypointPull :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_WaypointPush () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: WaypointPush :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mavros_msgs_srv_WaypointSetCurrent () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mavros_msgs :: srv :: WaypointSetCurrent :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_micro_ros_diagnostic_msgs_srv_MicroROSSelfTest () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < micro_ros_diagnostic_msgs :: srv :: MicroROSSelfTest :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_DeviceReport () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: DeviceReport :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_DeviceSettings () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: DeviceSettings :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_ExternalHeadingUpdate () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: ExternalHeadingUpdate :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetAccelAdaptiveVals () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetAccelAdaptiveVals :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetAccelBias () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetAccelBias :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetAccelBiasModel () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetAccelBiasModel :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetAccelNoise () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetAccelNoise :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetComplementaryFilter () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetComplementaryFilter :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetConingScullingComp () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetConingScullingComp :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetDynamicsMode () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetDynamicsMode :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetEstimationControlFlags () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetEstimationControlFlags :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetGravityAdaptiveVals () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetGravityAdaptiveVals :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetGyroBias () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetGyroBias :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetGyroBiasModel () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetGyroBiasModel :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetGyroNoise () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetGyroNoise :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetHardIronValues () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetHardIronValues :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetHeadingSource () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetHeadingSource :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetMagAdaptiveVals () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetMagAdaptiveVals :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetMagDipAdaptiveVals () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetMagDipAdaptiveVals :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetMagNoise () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetMagNoise :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetReferencePosition () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetReferencePosition :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetRelativePositionReference () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetRelativePositionReference :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetSensor2VehicleOffset () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetSensor2VehicleOffset :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetSensor2VehicleRotation () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetSensor2VehicleRotation :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetSensor2VehicleTransformation () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetSensor2VehicleTransformation :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetSoftIronMatrix () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetSoftIronMatrix :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetTareOrientation () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetTareOrientation :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetZeroAngleUpdateThreshold () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetZeroAngleUpdateThreshold :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_GetZeroVelocityUpdateThreshold () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: GetZeroVelocityUpdateThreshold :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_InitFilterEuler () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: InitFilterEuler :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_InitFilterHeading () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: InitFilterHeading :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetAccelAdaptiveVals () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetAccelAdaptiveVals :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetAccelBias () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetAccelBias :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetAccelBiasModel () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetAccelBiasModel :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetAccelNoise () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetAccelNoise :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetComplementaryFilter () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetComplementaryFilter :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetConingScullingComp () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetConingScullingComp :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetDynamicsMode () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetDynamicsMode :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetEstimationControlFlags () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetEstimationControlFlags :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetFilterSpeedLeverArm () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetFilterSpeedLeverArm :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetGravityAdaptiveVals () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetGravityAdaptiveVals :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetGyroBias () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetGyroBias :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetGyroBiasModel () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetGyroBiasModel :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetGyroNoise () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetGyroNoise :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetHardIronValues () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetHardIronValues :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetHeadingSource () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetHeadingSource :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetMagAdaptiveVals () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetMagAdaptiveVals :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetMagDipAdaptiveVals () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetMagDipAdaptiveVals :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetMagNoise () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetMagNoise :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetReferencePosition () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetReferencePosition :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetRelativePositionReference () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetRelativePositionReference :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetSensor2VehicleOffset () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetSensor2VehicleOffset :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetSensor2VehicleRotation () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetSensor2VehicleRotation :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetSoftIronMatrix () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetSoftIronMatrix :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetTareOrientation () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetTareOrientation :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetZeroAngleUpdateThreshold () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetZeroAngleUpdateThreshold :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_microstrain_inertial_msgs_srv_SetZeroVelocityUpdateThreshold () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < microstrain_inertial_msgs :: srv :: SetZeroVelocityUpdateThreshold :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_ApplyPlanningScene () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: ApplyPlanningScene :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_ChangeControlDimensions () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: ChangeControlDimensions :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_ChangeDriftDimensions () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: ChangeDriftDimensions :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_CheckIfRobotStateExistsInWarehouse () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: CheckIfRobotStateExistsInWarehouse :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_DeleteRobotStateFromWarehouse () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: DeleteRobotStateFromWarehouse :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_ExecuteKnownTrajectory () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: ExecuteKnownTrajectory :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_GetCartesianPath () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: GetCartesianPath :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_GetMotionPlan () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: GetMotionPlan :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_GetMotionSequence () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: GetMotionSequence :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_GetPlannerParams () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: GetPlannerParams :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_GetPlanningScene () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: GetPlanningScene :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_GetPositionFK () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: GetPositionFK :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_GetPositionIK () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: GetPositionIK :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_GetRobotStateFromWarehouse () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: GetRobotStateFromWarehouse :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_GetStateValidity () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: GetStateValidity :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_GraspPlanning () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: GraspPlanning :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_ListRobotStatesInWarehouse () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: ListRobotStatesInWarehouse :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_LoadMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: LoadMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_QueryPlannerInterfaces () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: QueryPlannerInterfaces :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_RenameRobotStateInWarehouse () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: RenameRobotStateInWarehouse :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_SaveMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: SaveMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_SaveRobotStateToWarehouse () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: SaveRobotStateToWarehouse :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_SetPlannerParams () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: SetPlannerParams :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_moveit_msgs_srv_UpdatePointcloudOctomap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < moveit_msgs :: srv :: UpdatePointcloudOctomap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_mrpt_msgs_srv_GetCMGraph () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < mrpt_msgs :: srv :: GetCMGraph :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_naoqi_bridge_msgs_srv_CmdPoseService () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < naoqi_bridge_msgs :: srv :: CmdPoseService :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_naoqi_bridge_msgs_srv_CmdVelService () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < naoqi_bridge_msgs :: srv :: CmdVelService :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_naoqi_bridge_msgs_srv_GetBodyROI () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < naoqi_bridge_msgs :: srv :: GetBodyROI :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_naoqi_bridge_msgs_srv_GetFacesROI () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < naoqi_bridge_msgs :: srv :: GetFacesROI :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_naoqi_bridge_msgs_srv_GetFloat () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < naoqi_bridge_msgs :: srv :: GetFloat :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_naoqi_bridge_msgs_srv_GetInstalledBehaviors () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < naoqi_bridge_msgs :: srv :: GetInstalledBehaviors :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_naoqi_bridge_msgs_srv_GetRobotInfo () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < naoqi_bridge_msgs :: srv :: GetRobotInfo :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_naoqi_bridge_msgs_srv_GetString () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < naoqi_bridge_msgs :: srv :: GetString :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_naoqi_bridge_msgs_srv_GetTruepose () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < naoqi_bridge_msgs :: srv :: GetTruepose :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_naoqi_bridge_msgs_srv_OrthogonalSecurityDistance () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < naoqi_bridge_msgs :: srv :: OrthogonalSecurityDistance :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_naoqi_bridge_msgs_srv_SetArmsEnabled () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < naoqi_bridge_msgs :: srv :: SetArmsEnabled :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_naoqi_bridge_msgs_srv_SetFloat () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < naoqi_bridge_msgs :: srv :: SetFloat :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_naoqi_bridge_msgs_srv_SetString () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < naoqi_bridge_msgs :: srv :: SetString :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_naoqi_bridge_msgs_srv_SetTransform () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < naoqi_bridge_msgs :: srv :: SetTransform :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_naoqi_bridge_msgs_srv_TangentialSecurityDistance () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < naoqi_bridge_msgs :: srv :: TangentialSecurityDistance :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav2_msgs_srv_ClearCostmapAroundRobot () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < nav2_msgs :: srv :: ClearCostmapAroundRobot :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav2_msgs_srv_ClearCostmapExceptRegion () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < nav2_msgs :: srv :: ClearCostmapExceptRegion :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav2_msgs_srv_ClearEntireCostmap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < nav2_msgs :: srv :: ClearEntireCostmap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav2_msgs_srv_GetCostmap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < nav2_msgs :: srv :: GetCostmap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav2_msgs_srv_LoadMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < nav2_msgs :: srv :: LoadMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav2_msgs_srv_ManageLifecycleNodes () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < nav2_msgs :: srv :: ManageLifecycleNodes :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav2_msgs_srv_SaveMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < nav2_msgs :: srv :: SaveMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav_msgs_srv_GetMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < nav_msgs :: srv :: GetMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav_msgs_srv_GetPlan () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < nav_msgs :: srv :: GetPlan :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav_msgs_srv_LoadMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < nav_msgs :: srv :: LoadMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav_msgs_srv_SetMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < nav_msgs :: srv :: SetMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_novatel_gps_msgs_srv_NovatelFRESET () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < novatel_gps_msgs :: srv :: NovatelFRESET :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_object_recognition_msgs_srv_GetObjectInformation () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < object_recognition_msgs :: srv :: GetObjectInformation :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_octomap_msgs_srv_BoundingBoxQuery () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < octomap_msgs :: srv :: BoundingBoxQuery :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_octomap_msgs_srv_GetOctomap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < octomap_msgs :: srv :: GetOctomap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ouster_msgs_srv_GetMetadata () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ouster_msgs :: srv :: GetMetadata :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_pcl_msgs_srv_UpdateFilename () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < pcl_msgs :: srv :: UpdateFilename :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_phidgets_msgs_srv_SetDigitalOutput () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < phidgets_msgs :: srv :: SetDigitalOutput :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_AddProblem () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: AddProblem :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_AddProblemGoal () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: AddProblemGoal :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_AffectNode () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: AffectNode :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_AffectParam () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: AffectParam :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_ClearProblemKnowledge () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: ClearProblemKnowledge :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_ExistNode () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: ExistNode :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_GetDomain () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: GetDomain :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_GetDomainActionDetails () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: GetDomainActionDetails :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_GetDomainActions () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: GetDomainActions :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_GetDomainConstants () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: GetDomainConstants :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_GetDomainDurativeActionDetails () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: GetDomainDurativeActionDetails :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_GetDomainName () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: GetDomainName :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_GetDomainTypes () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: GetDomainTypes :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_GetNodeDetails () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: GetNodeDetails :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_GetOrderedSubGoals () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: GetOrderedSubGoals :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_GetPlan () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: GetPlan :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_GetProblem () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: GetProblem :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_GetProblemGoal () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: GetProblemGoal :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_GetProblemInstanceDetails () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: GetProblemInstanceDetails :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_GetProblemInstances () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: GetProblemInstances :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_GetStates () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: GetStates :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_IsProblemGoalSatisfied () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: IsProblemGoalSatisfied :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_plansys2_msgs_srv_RemoveProblemGoal () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < plansys2_msgs :: srv :: RemoveProblemGoal :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_common_msgs_srv_Trigger () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_common_msgs :: srv :: Trigger :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_CadMatchDetectObject () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: CadMatchDetectObject :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_CalibrateBasePlane () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: CalibrateBasePlane :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_ComputeGrasps () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: ComputeGrasps :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_DeleteBasePlaneCalibration () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: DeleteBasePlaneCalibration :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_DeleteLoadCarriers () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: DeleteLoadCarriers :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_DeleteRegionsOfInterest2D () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: DeleteRegionsOfInterest2D :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_DeleteRegionsOfInterest3D () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: DeleteRegionsOfInterest3D :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_DetectFillingLevel () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: DetectFillingLevel :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_DetectItems () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: DetectItems :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_DetectLoadCarriers () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: DetectLoadCarriers :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_DetectTags () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: DetectTags :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_GetBasePlaneCalibration () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: GetBasePlaneCalibration :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_GetLoadCarriers () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: GetLoadCarriers :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_GetRegionsOfInterest2D () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: GetRegionsOfInterest2D :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_GetRegionsOfInterest3D () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: GetRegionsOfInterest3D :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_HandEyeCalibration () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: HandEyeCalibration :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_HandEyeCalibrationTrigger () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: HandEyeCalibrationTrigger :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_SetHandEyeCalibration () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: SetHandEyeCalibration :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_SetHandEyeCalibrationPose () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: SetHandEyeCalibrationPose :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_SetLoadCarrier () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: SetLoadCarrier :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_SetRegionOfInterest2D () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: SetRegionOfInterest2D :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_SetRegionOfInterest3D () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: SetRegionOfInterest3D :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rc_reason_msgs_srv_SilhouetteMatchDetectObject () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rc_reason_msgs :: srv :: SilhouetteMatchDetectObject :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rcl_interfaces_srv_DescribeParameters () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rcl_interfaces :: srv :: DescribeParameters :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rcl_interfaces_srv_GetParameterTypes () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rcl_interfaces :: srv :: GetParameterTypes :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rcl_interfaces_srv_GetParameters () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rcl_interfaces :: srv :: GetParameters :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rcl_interfaces_srv_ListParameters () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rcl_interfaces :: srv :: ListParameters :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rcl_interfaces_srv_SetParameters () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rcl_interfaces :: srv :: SetParameters :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rcl_interfaces_srv_SetParametersAtomically () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rcl_interfaces :: srv :: SetParametersAtomically :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rclpy_message_converter_msgs_srv_NestedUint8ArrayTestService () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rclpy_message_converter_msgs :: srv :: NestedUint8ArrayTestService :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_realsense2_camera_msgs_srv_DeviceInfo () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < realsense2_camera_msgs :: srv :: DeviceInfo :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rmf_building_map_msgs_srv_GetBuildingMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rmf_building_map_msgs :: srv :: GetBuildingMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rmf_fleet_msgs_srv_LiftClearance () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rmf_fleet_msgs :: srv :: LiftClearance :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rmf_task_msgs_srv_CancelTask () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rmf_task_msgs :: srv :: CancelTask :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rmf_task_msgs_srv_GetTaskList () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rmf_task_msgs :: srv :: GetTaskList :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rmf_task_msgs_srv_ReviveTask () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rmf_task_msgs :: srv :: ReviveTask :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rmf_task_msgs_srv_SubmitTask () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rmf_task_msgs :: srv :: SubmitTask :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rmf_traffic_msgs_srv_RegisterParticipant () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rmf_traffic_msgs :: srv :: RegisterParticipant :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rmf_traffic_msgs_srv_RegisterQuery () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rmf_traffic_msgs :: srv :: RegisterQuery :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rmf_traffic_msgs_srv_RequestChanges () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rmf_traffic_msgs :: srv :: RequestChanges :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rmf_traffic_msgs_srv_UnregisterParticipant () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rmf_traffic_msgs :: srv :: UnregisterParticipant :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_robot_localization_srv_FromLL () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < robot_localization :: srv :: FromLL :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_robot_localization_srv_GetState () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < robot_localization :: srv :: GetState :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_robot_localization_srv_SetDatum () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < robot_localization :: srv :: SetDatum :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_robot_localization_srv_SetPose () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < robot_localization :: srv :: SetPose :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_robot_localization_srv_ToLL () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < robot_localization :: srv :: ToLL :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_robot_localization_srv_ToggleFilterProcessing () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < robot_localization :: srv :: ToggleFilterProcessing :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ros2cli_test_interfaces_srv_ShortVariedMultiNested () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ros2cli_test_interfaces :: srv :: ShortVariedMultiNested :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ros_ign_interfaces_srv_ControlWorld () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ros_ign_interfaces :: srv :: ControlWorld :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ros_ign_interfaces_srv_DeleteEntity () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ros_ign_interfaces :: srv :: DeleteEntity :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ros_ign_interfaces_srv_SetEntityPose () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ros_ign_interfaces :: srv :: SetEntityPose :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ros_ign_interfaces_srv_SpawnEntity () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ros_ign_interfaces :: srv :: SpawnEntity :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_DeleteParam () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: DeleteParam :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_GetActionServers () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: GetActionServers :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_GetParam () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: GetParam :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_GetParamNames () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: GetParamNames :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_GetROSVersion () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: GetROSVersion :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_GetTime () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: GetTime :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_HasParam () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: HasParam :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_MessageDetails () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: MessageDetails :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_NodeDetails () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: NodeDetails :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_Nodes () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: Nodes :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_Publishers () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: Publishers :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_ServiceNode () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: ServiceNode :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_ServiceProviders () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: ServiceProviders :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_ServiceRequestDetails () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: ServiceRequestDetails :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_ServiceResponseDetails () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: ServiceResponseDetails :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_ServiceType () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: ServiceType :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_Services () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: Services :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_ServicesForType () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: ServicesForType :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_SetParam () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: SetParam :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_Subscribers () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: Subscribers :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_TopicType () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: TopicType :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_Topics () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: Topics :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_TopicsAndRawTypes () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: TopicsAndRawTypes :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosapi_msgs_srv_TopicsForType () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosapi_msgs :: srv :: TopicsForType :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosbag2_interfaces_srv_GetRate () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosbag2_interfaces :: srv :: GetRate :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosbag2_interfaces_srv_IsPaused () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosbag2_interfaces :: srv :: IsPaused :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosbag2_interfaces_srv_Pause () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosbag2_interfaces :: srv :: Pause :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosbag2_interfaces_srv_PlayNext () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosbag2_interfaces :: srv :: PlayNext :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosbag2_interfaces_srv_Resume () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosbag2_interfaces :: srv :: Resume :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosbag2_interfaces_srv_Seek () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosbag2_interfaces :: srv :: Seek :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosbag2_interfaces_srv_SetRate () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosbag2_interfaces :: srv :: SetRate :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosbag2_interfaces_srv_TogglePaused () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosbag2_interfaces :: srv :: TogglePaused :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosbridge_test_msgs_srv_AddTwoInts () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosbridge_test_msgs :: srv :: AddTwoInts :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosbridge_test_msgs_srv_SendBytes () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosbridge_test_msgs :: srv :: SendBytes :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosbridge_test_msgs_srv_TestArrayRequest () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosbridge_test_msgs :: srv :: TestArrayRequest :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosbridge_test_msgs_srv_TestEmpty () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosbridge_test_msgs :: srv :: TestEmpty :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosbridge_test_msgs_srv_TestMultipleRequestFields () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosbridge_test_msgs :: srv :: TestMultipleRequestFields :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosbridge_test_msgs_srv_TestMultipleResponseFields () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosbridge_test_msgs :: srv :: TestMultipleResponseFields :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosbridge_test_msgs_srv_TestNestedService () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosbridge_test_msgs :: srv :: TestNestedService :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosbridge_test_msgs_srv_TestRequestAndResponse () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosbridge_test_msgs :: srv :: TestRequestAndResponse :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosbridge_test_msgs_srv_TestRequestOnly () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosbridge_test_msgs :: srv :: TestRequestOnly :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rosbridge_test_msgs_srv_TestResponseOnly () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rosbridge_test_msgs :: srv :: TestResponseOnly :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rtabmap_ros_srv_AddLink () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rtabmap_ros :: srv :: AddLink :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rtabmap_ros_srv_CleanupLocalGrids () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rtabmap_ros :: srv :: CleanupLocalGrids :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rtabmap_ros_srv_DetectMoreLoopClosures () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rtabmap_ros :: srv :: DetectMoreLoopClosures :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rtabmap_ros_srv_GetMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rtabmap_ros :: srv :: GetMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rtabmap_ros_srv_GetMap2 () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rtabmap_ros :: srv :: GetMap2 :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rtabmap_ros_srv_GetNodeData () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rtabmap_ros :: srv :: GetNodeData :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rtabmap_ros_srv_GetNodesInRadius () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rtabmap_ros :: srv :: GetNodesInRadius :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rtabmap_ros_srv_GetPlan () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rtabmap_ros :: srv :: GetPlan :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rtabmap_ros_srv_GlobalBundleAdjustment () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rtabmap_ros :: srv :: GlobalBundleAdjustment :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rtabmap_ros_srv_ListLabels () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rtabmap_ros :: srv :: ListLabels :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rtabmap_ros_srv_LoadDatabase () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rtabmap_ros :: srv :: LoadDatabase :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rtabmap_ros_srv_PublishMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rtabmap_ros :: srv :: PublishMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rtabmap_ros_srv_RemoveLabel () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rtabmap_ros :: srv :: RemoveLabel :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rtabmap_ros_srv_ResetPose () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rtabmap_ros :: srv :: ResetPose :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rtabmap_ros_srv_SetGoal () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rtabmap_ros :: srv :: SetGoal :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rtabmap_ros_srv_SetLabel () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rtabmap_ros :: srv :: SetLabel :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_sensor_msgs_srv_SetCameraInfo () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < sensor_msgs :: srv :: SetCameraInfo :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_sick_safetyscanners2_interfaces_srv_FieldData () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < sick_safetyscanners2_interfaces :: srv :: FieldData :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_slam_toolbox_srv_AddSubmap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < slam_toolbox :: srv :: AddSubmap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_slam_toolbox_srv_Clear () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < slam_toolbox :: srv :: Clear :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_slam_toolbox_srv_ClearQueue () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < slam_toolbox :: srv :: ClearQueue :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_slam_toolbox_srv_DeserializePoseGraph () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < slam_toolbox :: srv :: DeserializePoseGraph :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_slam_toolbox_srv_LoopClosure () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < slam_toolbox :: srv :: LoopClosure :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_slam_toolbox_srv_MergeMaps () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < slam_toolbox :: srv :: MergeMaps :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_slam_toolbox_srv_Pause () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < slam_toolbox :: srv :: Pause :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_slam_toolbox_srv_SaveMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < slam_toolbox :: srv :: SaveMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_slam_toolbox_srv_SerializePoseGraph () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < slam_toolbox :: srv :: SerializePoseGraph :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_slam_toolbox_srv_ToggleInteractive () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < slam_toolbox :: srv :: ToggleInteractive :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_smacc2_msgs_srv_SmaccGetTransitionHistory () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < smacc2_msgs :: srv :: SmaccGetTransitionHistory :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_spatio_temporal_voxel_layer_srv_SaveGrid () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < spatio_temporal_voxel_layer :: srv :: SaveGrid :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_std_srvs_srv_Empty () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < std_srvs :: srv :: Empty :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_std_srvs_srv_SetBool () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < std_srvs :: srv :: SetBool :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_std_srvs_srv_Trigger () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < std_srvs :: srv :: Trigger :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_system_modes_msgs_srv_ChangeMode () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < system_modes_msgs :: srv :: ChangeMode :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_system_modes_msgs_srv_GetAvailableModes () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < system_modes_msgs :: srv :: GetAvailableModes :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_system_modes_msgs_srv_GetMode () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < system_modes_msgs :: srv :: GetMode :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_test_bond_srv_TestBond () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < test_bond :: srv :: TestBond :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_test_msgs_srv_Arrays () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < test_msgs :: srv :: Arrays :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_test_msgs_srv_BasicTypes () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < test_msgs :: srv :: BasicTypes :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_test_msgs_srv_Empty () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < test_msgs :: srv :: Empty :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_tf2_msgs_srv_FrameGraph () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < tf2_msgs :: srv :: FrameGraph :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_topic_tools_interfaces_srv_MuxAdd () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < topic_tools_interfaces :: srv :: MuxAdd :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_topic_tools_interfaces_srv_MuxDelete () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < topic_tools_interfaces :: srv :: MuxDelete :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_topic_tools_interfaces_srv_MuxList () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < topic_tools_interfaces :: srv :: MuxList :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_topic_tools_interfaces_srv_MuxSelect () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < topic_tools_interfaces :: srv :: MuxSelect :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_turtlebot3_msgs_srv_Dqn () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < turtlebot3_msgs :: srv :: Dqn :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_turtlebot3_msgs_srv_Sound () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < turtlebot3_msgs :: srv :: Sound :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_turtlesim_srv_Kill () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < turtlesim :: srv :: Kill :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_turtlesim_srv_SetPen () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < turtlesim :: srv :: SetPen :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_turtlesim_srv_Spawn () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < turtlesim :: srv :: Spawn :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_turtlesim_srv_TeleportAbsolute () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < turtlesim :: srv :: TeleportAbsolute :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_turtlesim_srv_TeleportRelative () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < turtlesim :: srv :: TeleportRelative :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ublox_ubx_interfaces_srv_ColdStart () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ublox_ubx_interfaces :: srv :: ColdStart :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ublox_ubx_interfaces_srv_HotStart () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ublox_ubx_interfaces :: srv :: HotStart :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ublox_ubx_interfaces_srv_ResetODO () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ublox_ubx_interfaces :: srv :: ResetODO :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ublox_ubx_interfaces_srv_WarmStart () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ublox_ubx_interfaces :: srv :: WarmStart :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_udp_msgs_srv_UdpSend () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < udp_msgs :: srv :: UdpSend :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_udp_msgs_srv_UdpSocket () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < udp_msgs :: srv :: UdpSocket :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ur_dashboard_msgs_srv_AddToLog () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ur_dashboard_msgs :: srv :: AddToLog :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ur_dashboard_msgs_srv_GetLoadedProgram () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ur_dashboard_msgs :: srv :: GetLoadedProgram :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ur_dashboard_msgs_srv_GetProgramState () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ur_dashboard_msgs :: srv :: GetProgramState :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ur_dashboard_msgs_srv_GetRobotMode () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ur_dashboard_msgs :: srv :: GetRobotMode :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ur_dashboard_msgs_srv_GetSafetyMode () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ur_dashboard_msgs :: srv :: GetSafetyMode :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ur_dashboard_msgs_srv_IsProgramRunning () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ur_dashboard_msgs :: srv :: IsProgramRunning :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ur_dashboard_msgs_srv_IsProgramSaved () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ur_dashboard_msgs :: srv :: IsProgramSaved :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ur_dashboard_msgs_srv_Load () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ur_dashboard_msgs :: srv :: Load :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ur_dashboard_msgs_srv_Popup () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ur_dashboard_msgs :: srv :: Popup :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ur_dashboard_msgs_srv_RawRequest () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ur_dashboard_msgs :: srv :: RawRequest :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ur_msgs_srv_SetIO () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ur_msgs :: srv :: SetIO :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ur_msgs_srv_SetPayload () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ur_msgs :: srv :: SetPayload :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_ur_msgs_srv_SetSpeedSliderFraction () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < ur_msgs :: srv :: SetSpeedSliderFraction :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_vda5050_connector_srv_GetState () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < vda5050_connector :: srv :: GetState :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_vda5050_connector_srv_SupportedActions () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < vda5050_connector :: srv :: SupportedActions :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_visualization_msgs_srv_GetInteractiveMarkers () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < visualization_msgs :: srv :: GetInteractiveMarkers :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_webots_ros2_msgs_srv_SetInt () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < webots_ros2_msgs :: srv :: SetInt :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_webots_ros2_msgs_srv_SpawnUrdfRobot () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < webots_ros2_msgs :: srv :: SpawnUrdfRobot :: Service > () } static MAP : phf :: Map < & 'static str , fn () -> UntypedServiceSupport > = phf :: phf_map ! { "action_msgs/srv/CancelGoal" => new_untyped_service_support_action_msgs_srv_CancelGoal , "autoware_auto_msgs/srv/AutonomyModeChange" => new_untyped_service_support_autoware_auto_msgs_srv_AutonomyModeChange , "autoware_auto_msgs/srv/HADMapService" => new_untyped_service_support_autoware_auto_msgs_srv_HADMapService , "autoware_auto_msgs/srv/ModifyTrajectory" => new_untyped_service_support_autoware_auto_msgs_srv_ModifyTrajectory , "blickfeld_driver/srv/ImuStaticTransformation" => new_untyped_service_support_blickfeld_driver_srv_ImuStaticTransformation , "blickfeld_driver/srv/SetScanPattern" => new_untyped_service_support_blickfeld_driver_srv_SetScanPattern , "cartographer_ros_msgs/srv/FinishTrajectory" => new_untyped_service_support_cartographer_ros_msgs_srv_FinishTrajectory , "cartographer_ros_msgs/srv/StartTrajectory" => new_untyped_service_support_cartographer_ros_msgs_srv_StartTrajectory , "cartographer_ros_msgs/srv/SubmapQuery" => new_untyped_service_support_cartographer_ros_msgs_srv_SubmapQuery , "cartographer_ros_msgs/srv/WriteState" => new_untyped_service_support_cartographer_ros_msgs_srv_WriteState , "composition_interfaces/srv/ListNodes" => new_untyped_service_support_composition_interfaces_srv_ListNodes , "composition_interfaces/srv/LoadNode" => new_untyped_service_support_composition_interfaces_srv_LoadNode , "composition_interfaces/srv/UnloadNode" => new_untyped_service_support_composition_interfaces_srv_UnloadNode , "control_msgs/srv/QueryCalibrationState" => new_untyped_service_support_control_msgs_srv_QueryCalibrationState , "control_msgs/srv/QueryTrajectoryState" => new_untyped_service_support_control_msgs_srv_QueryTrajectoryState , "controller_manager_msgs/srv/ConfigureController" => new_untyped_service_support_controller_manager_msgs_srv_ConfigureController , "controller_manager_msgs/srv/ConfigureStartController" => new_untyped_service_support_controller_manager_msgs_srv_ConfigureStartController , "controller_manager_msgs/srv/ListControllerTypes" => new_untyped_service_support_controller_manager_msgs_srv_ListControllerTypes , "controller_manager_msgs/srv/ListControllers" => new_untyped_service_support_controller_manager_msgs_srv_ListControllers , "controller_manager_msgs/srv/ListHardwareInterfaces" => new_untyped_service_support_controller_manager_msgs_srv_ListHardwareInterfaces , "controller_manager_msgs/srv/LoadConfigureController" => new_untyped_service_support_controller_manager_msgs_srv_LoadConfigureController , "controller_manager_msgs/srv/LoadController" => new_untyped_service_support_controller_manager_msgs_srv_LoadController , "controller_manager_msgs/srv/LoadStartController" => new_untyped_service_support_controller_manager_msgs_srv_LoadStartController , "controller_manager_msgs/srv/ReloadControllerLibraries" => new_untyped_service_support_controller_manager_msgs_srv_ReloadControllerLibraries , "controller_manager_msgs/srv/SwitchController" => new_untyped_service_support_controller_manager_msgs_srv_SwitchController , "controller_manager_msgs/srv/UnloadController" => new_untyped_service_support_controller_manager_msgs_srv_UnloadController , "depthai_ros_msgs/srv/NormalizedImageCrop" => new_untyped_service_support_depthai_ros_msgs_srv_NormalizedImageCrop , "depthai_ros_msgs/srv/TriggerNamed" => new_untyped_service_support_depthai_ros_msgs_srv_TriggerNamed , "diagnostic_msgs/srv/AddDiagnostics" => new_untyped_service_support_diagnostic_msgs_srv_AddDiagnostics , "diagnostic_msgs/srv/SelfTest" => new_untyped_service_support_diagnostic_msgs_srv_SelfTest , "dwb_msgs/srv/DebugLocalPlan" => new_untyped_service_support_dwb_msgs_srv_DebugLocalPlan , "dwb_msgs/srv/GenerateTrajectory" => new_untyped_service_support_dwb_msgs_srv_GenerateTrajectory , "dwb_msgs/srv/GenerateTwists" => new_untyped_service_support_dwb_msgs_srv_GenerateTwists , "dwb_msgs/srv/GetCriticScore" => new_untyped_service_support_dwb_msgs_srv_GetCriticScore , "dwb_msgs/srv/ScoreTrajectory" => new_untyped_service_support_dwb_msgs_srv_ScoreTrajectory , "dynamixel_sdk_custom_interfaces/srv/GetPosition" => new_untyped_service_support_dynamixel_sdk_custom_interfaces_srv_GetPosition , "dynamixel_workbench_msgs/srv/DynamixelCommand" => new_untyped_service_support_dynamixel_workbench_msgs_srv_DynamixelCommand , "dynamixel_workbench_msgs/srv/GetDynamixelInfo" => new_untyped_service_support_dynamixel_workbench_msgs_srv_GetDynamixelInfo , "example_interfaces/srv/AddTwoInts" => new_untyped_service_support_example_interfaces_srv_AddTwoInts , "example_interfaces/srv/SetBool" => new_untyped_service_support_example_interfaces_srv_SetBool , "example_interfaces/srv/Trigger" => new_untyped_service_support_example_interfaces_srv_Trigger , "foros_msgs/srv/AppendEntries" => new_untyped_service_support_foros_msgs_srv_AppendEntries , "foros_msgs/srv/RequestVote" => new_untyped_service_support_foros_msgs_srv_RequestVote , "gazebo_msgs/srv/ApplyBodyWrench" => new_untyped_service_support_gazebo_msgs_srv_ApplyBodyWrench , "gazebo_msgs/srv/ApplyJointEffort" => new_untyped_service_support_gazebo_msgs_srv_ApplyJointEffort , "gazebo_msgs/srv/ApplyLinkWrench" => new_untyped_service_support_gazebo_msgs_srv_ApplyLinkWrench , "gazebo_msgs/srv/BodyRequest" => new_untyped_service_support_gazebo_msgs_srv_BodyRequest , "gazebo_msgs/srv/DeleteEntity" => new_untyped_service_support_gazebo_msgs_srv_DeleteEntity , "gazebo_msgs/srv/DeleteLight" => new_untyped_service_support_gazebo_msgs_srv_DeleteLight , "gazebo_msgs/srv/DeleteModel" => new_untyped_service_support_gazebo_msgs_srv_DeleteModel , "gazebo_msgs/srv/GetEntityState" => new_untyped_service_support_gazebo_msgs_srv_GetEntityState , "gazebo_msgs/srv/GetJointProperties" => new_untyped_service_support_gazebo_msgs_srv_GetJointProperties , "gazebo_msgs/srv/GetLightProperties" => new_untyped_service_support_gazebo_msgs_srv_GetLightProperties , "gazebo_msgs/srv/GetLinkProperties" => new_untyped_service_support_gazebo_msgs_srv_GetLinkProperties , "gazebo_msgs/srv/GetLinkState" => new_untyped_service_support_gazebo_msgs_srv_GetLinkState , "gazebo_msgs/srv/GetModelList" => new_untyped_service_support_gazebo_msgs_srv_GetModelList , "gazebo_msgs/srv/GetModelProperties" => new_untyped_service_support_gazebo_msgs_srv_GetModelProperties , "gazebo_msgs/srv/GetModelState" => new_untyped_service_support_gazebo_msgs_srv_GetModelState , "gazebo_msgs/srv/GetPhysicsProperties" => new_untyped_service_support_gazebo_msgs_srv_GetPhysicsProperties , "gazebo_msgs/srv/GetWorldProperties" => new_untyped_service_support_gazebo_msgs_srv_GetWorldProperties , "gazebo_msgs/srv/JointRequest" => new_untyped_service_support_gazebo_msgs_srv_JointRequest , "gazebo_msgs/srv/LinkRequest" => new_untyped_service_support_gazebo_msgs_srv_LinkRequest , "gazebo_msgs/srv/SetEntityState" => new_untyped_service_support_gazebo_msgs_srv_SetEntityState , "gazebo_msgs/srv/SetJointProperties" => new_untyped_service_support_gazebo_msgs_srv_SetJointProperties , "gazebo_msgs/srv/SetJointTrajectory" => new_untyped_service_support_gazebo_msgs_srv_SetJointTrajectory , "gazebo_msgs/srv/SetLightProperties" => new_untyped_service_support_gazebo_msgs_srv_SetLightProperties , "gazebo_msgs/srv/SetLinkProperties" => new_untyped_service_support_gazebo_msgs_srv_SetLinkProperties , "gazebo_msgs/srv/SetLinkState" => new_untyped_service_support_gazebo_msgs_srv_SetLinkState , "gazebo_msgs/srv/SetModelConfiguration" => new_untyped_service_support_gazebo_msgs_srv_SetModelConfiguration , "gazebo_msgs/srv/SetModelState" => new_untyped_service_support_gazebo_msgs_srv_SetModelState , "gazebo_msgs/srv/SetPhysicsProperties" => new_untyped_service_support_gazebo_msgs_srv_SetPhysicsProperties , "gazebo_msgs/srv/SpawnEntity" => new_untyped_service_support_gazebo_msgs_srv_SpawnEntity , "gazebo_msgs/srv/SpawnModel" => new_untyped_service_support_gazebo_msgs_srv_SpawnModel , "geographic_msgs/srv/GetGeoPath" => new_untyped_service_support_geographic_msgs_srv_GetGeoPath , "geographic_msgs/srv/GetGeographicMap" => new_untyped_service_support_geographic_msgs_srv_GetGeographicMap , "geographic_msgs/srv/GetRoutePlan" => new_untyped_service_support_geographic_msgs_srv_GetRoutePlan , "geographic_msgs/srv/UpdateGeographicMap" => new_untyped_service_support_geographic_msgs_srv_UpdateGeographicMap , "grbl_msgs/srv/Stop" => new_untyped_service_support_grbl_msgs_srv_Stop , "irobot_create_msgs/srv/EStop" => new_untyped_service_support_irobot_create_msgs_srv_EStop , "irobot_create_msgs/srv/ResetPose" => new_untyped_service_support_irobot_create_msgs_srv_ResetPose , "irobot_create_msgs/srv/RobotPower" => new_untyped_service_support_irobot_create_msgs_srv_RobotPower , "lifecycle_msgs/srv/ChangeState" => new_untyped_service_support_lifecycle_msgs_srv_ChangeState , "lifecycle_msgs/srv/GetAvailableStates" => new_untyped_service_support_lifecycle_msgs_srv_GetAvailableStates , "lifecycle_msgs/srv/GetAvailableTransitions" => new_untyped_service_support_lifecycle_msgs_srv_GetAvailableTransitions , "lifecycle_msgs/srv/GetState" => new_untyped_service_support_lifecycle_msgs_srv_GetState , "logging_demo/srv/ConfigLogger" => new_untyped_service_support_logging_demo_srv_ConfigLogger , "map_msgs/srv/GetMapROI" => new_untyped_service_support_map_msgs_srv_GetMapROI , "map_msgs/srv/GetPointMap" => new_untyped_service_support_map_msgs_srv_GetPointMap , "map_msgs/srv/GetPointMapROI" => new_untyped_service_support_map_msgs_srv_GetPointMapROI , "map_msgs/srv/ProjectedMapsInfo" => new_untyped_service_support_map_msgs_srv_ProjectedMapsInfo , "map_msgs/srv/SaveMap" => new_untyped_service_support_map_msgs_srv_SaveMap , "map_msgs/srv/SetMapProjections" => new_untyped_service_support_map_msgs_srv_SetMapProjections , "mapviz_interfaces/srv/AddMapvizDisplay" => new_untyped_service_support_mapviz_interfaces_srv_AddMapvizDisplay , "marti_nav_msgs/srv/DeleteRoute" => new_untyped_service_support_marti_nav_msgs_srv_DeleteRoute , "marti_nav_msgs/srv/GetRoute" => new_untyped_service_support_marti_nav_msgs_srv_GetRoute , "marti_nav_msgs/srv/GetRouteList" => new_untyped_service_support_marti_nav_msgs_srv_GetRouteList , "marti_nav_msgs/srv/PlanRoute" => new_untyped_service_support_marti_nav_msgs_srv_PlanRoute , "marti_nav_msgs/srv/SaveRecordedRoute" => new_untyped_service_support_marti_nav_msgs_srv_SaveRecordedRoute , "marti_nav_msgs/srv/SaveRoute" => new_untyped_service_support_marti_nav_msgs_srv_SaveRoute , "marti_nav_msgs/srv/SetRoute" => new_untyped_service_support_marti_nav_msgs_srv_SetRoute , "marti_nav_msgs/srv/UpdateRouteMetadata" => new_untyped_service_support_marti_nav_msgs_srv_UpdateRouteMetadata , "marti_sensor_msgs/srv/SetExposure" => new_untyped_service_support_marti_sensor_msgs_srv_SetExposure , "mavros_msgs/srv/CommandAck" => new_untyped_service_support_mavros_msgs_srv_CommandAck , "mavros_msgs/srv/CommandBool" => new_untyped_service_support_mavros_msgs_srv_CommandBool , "mavros_msgs/srv/CommandHome" => new_untyped_service_support_mavros_msgs_srv_CommandHome , "mavros_msgs/srv/CommandInt" => new_untyped_service_support_mavros_msgs_srv_CommandInt , "mavros_msgs/srv/CommandLong" => new_untyped_service_support_mavros_msgs_srv_CommandLong , "mavros_msgs/srv/CommandTOL" => new_untyped_service_support_mavros_msgs_srv_CommandTOL , "mavros_msgs/srv/CommandTriggerControl" => new_untyped_service_support_mavros_msgs_srv_CommandTriggerControl , "mavros_msgs/srv/CommandTriggerInterval" => new_untyped_service_support_mavros_msgs_srv_CommandTriggerInterval , "mavros_msgs/srv/CommandVtolTransition" => new_untyped_service_support_mavros_msgs_srv_CommandVtolTransition , "mavros_msgs/srv/EndpointAdd" => new_untyped_service_support_mavros_msgs_srv_EndpointAdd , "mavros_msgs/srv/EndpointDel" => new_untyped_service_support_mavros_msgs_srv_EndpointDel , "mavros_msgs/srv/FileChecksum" => new_untyped_service_support_mavros_msgs_srv_FileChecksum , "mavros_msgs/srv/FileClose" => new_untyped_service_support_mavros_msgs_srv_FileClose , "mavros_msgs/srv/FileList" => new_untyped_service_support_mavros_msgs_srv_FileList , "mavros_msgs/srv/FileMakeDir" => new_untyped_service_support_mavros_msgs_srv_FileMakeDir , "mavros_msgs/srv/FileOpen" => new_untyped_service_support_mavros_msgs_srv_FileOpen , "mavros_msgs/srv/FileRead" => new_untyped_service_support_mavros_msgs_srv_FileRead , "mavros_msgs/srv/FileRemove" => new_untyped_service_support_mavros_msgs_srv_FileRemove , "mavros_msgs/srv/FileRemoveDir" => new_untyped_service_support_mavros_msgs_srv_FileRemoveDir , "mavros_msgs/srv/FileRename" => new_untyped_service_support_mavros_msgs_srv_FileRename , "mavros_msgs/srv/FileTruncate" => new_untyped_service_support_mavros_msgs_srv_FileTruncate , "mavros_msgs/srv/FileWrite" => new_untyped_service_support_mavros_msgs_srv_FileWrite , "mavros_msgs/srv/LogRequestData" => new_untyped_service_support_mavros_msgs_srv_LogRequestData , "mavros_msgs/srv/LogRequestEnd" => new_untyped_service_support_mavros_msgs_srv_LogRequestEnd , "mavros_msgs/srv/LogRequestList" => new_untyped_service_support_mavros_msgs_srv_LogRequestList , "mavros_msgs/srv/MessageInterval" => new_untyped_service_support_mavros_msgs_srv_MessageInterval , "mavros_msgs/srv/MountConfigure" => new_untyped_service_support_mavros_msgs_srv_MountConfigure , "mavros_msgs/srv/ParamGet" => new_untyped_service_support_mavros_msgs_srv_ParamGet , "mavros_msgs/srv/ParamPull" => new_untyped_service_support_mavros_msgs_srv_ParamPull , "mavros_msgs/srv/ParamPush" => new_untyped_service_support_mavros_msgs_srv_ParamPush , "mavros_msgs/srv/ParamSet" => new_untyped_service_support_mavros_msgs_srv_ParamSet , "mavros_msgs/srv/ParamSetV2" => new_untyped_service_support_mavros_msgs_srv_ParamSetV2 , "mavros_msgs/srv/SetMavFrame" => new_untyped_service_support_mavros_msgs_srv_SetMavFrame , "mavros_msgs/srv/SetMode" => new_untyped_service_support_mavros_msgs_srv_SetMode , "mavros_msgs/srv/StreamRate" => new_untyped_service_support_mavros_msgs_srv_StreamRate , "mavros_msgs/srv/VehicleInfoGet" => new_untyped_service_support_mavros_msgs_srv_VehicleInfoGet , "mavros_msgs/srv/WaypointClear" => new_untyped_service_support_mavros_msgs_srv_WaypointClear , "mavros_msgs/srv/WaypointPull" => new_untyped_service_support_mavros_msgs_srv_WaypointPull , "mavros_msgs/srv/WaypointPush" => new_untyped_service_support_mavros_msgs_srv_WaypointPush , "mavros_msgs/srv/WaypointSetCurrent" => new_untyped_service_support_mavros_msgs_srv_WaypointSetCurrent , "micro_ros_diagnostic_msgs/srv/MicroROSSelfTest" => new_untyped_service_support_micro_ros_diagnostic_msgs_srv_MicroROSSelfTest , "microstrain_inertial_msgs/srv/DeviceReport" => new_untyped_service_support_microstrain_inertial_msgs_srv_DeviceReport , "microstrain_inertial_msgs/srv/DeviceSettings" => new_untyped_service_support_microstrain_inertial_msgs_srv_DeviceSettings , "microstrain_inertial_msgs/srv/ExternalHeadingUpdate" => new_untyped_service_support_microstrain_inertial_msgs_srv_ExternalHeadingUpdate , "microstrain_inertial_msgs/srv/GetAccelAdaptiveVals" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetAccelAdaptiveVals , "microstrain_inertial_msgs/srv/GetAccelBias" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetAccelBias , "microstrain_inertial_msgs/srv/GetAccelBiasModel" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetAccelBiasModel , "microstrain_inertial_msgs/srv/GetAccelNoise" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetAccelNoise , "microstrain_inertial_msgs/srv/GetComplementaryFilter" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetComplementaryFilter , "microstrain_inertial_msgs/srv/GetConingScullingComp" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetConingScullingComp , "microstrain_inertial_msgs/srv/GetDynamicsMode" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetDynamicsMode , "microstrain_inertial_msgs/srv/GetEstimationControlFlags" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetEstimationControlFlags , "microstrain_inertial_msgs/srv/GetGravityAdaptiveVals" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetGravityAdaptiveVals , "microstrain_inertial_msgs/srv/GetGyroBias" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetGyroBias , "microstrain_inertial_msgs/srv/GetGyroBiasModel" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetGyroBiasModel , "microstrain_inertial_msgs/srv/GetGyroNoise" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetGyroNoise , "microstrain_inertial_msgs/srv/GetHardIronValues" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetHardIronValues , "microstrain_inertial_msgs/srv/GetHeadingSource" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetHeadingSource , "microstrain_inertial_msgs/srv/GetMagAdaptiveVals" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetMagAdaptiveVals , "microstrain_inertial_msgs/srv/GetMagDipAdaptiveVals" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetMagDipAdaptiveVals , "microstrain_inertial_msgs/srv/GetMagNoise" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetMagNoise , "microstrain_inertial_msgs/srv/GetReferencePosition" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetReferencePosition , "microstrain_inertial_msgs/srv/GetRelativePositionReference" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetRelativePositionReference , "microstrain_inertial_msgs/srv/GetSensor2VehicleOffset" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetSensor2VehicleOffset , "microstrain_inertial_msgs/srv/GetSensor2VehicleRotation" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetSensor2VehicleRotation , "microstrain_inertial_msgs/srv/GetSensor2VehicleTransformation" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetSensor2VehicleTransformation , "microstrain_inertial_msgs/srv/GetSoftIronMatrix" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetSoftIronMatrix , "microstrain_inertial_msgs/srv/GetTareOrientation" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetTareOrientation , "microstrain_inertial_msgs/srv/GetZeroAngleUpdateThreshold" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetZeroAngleUpdateThreshold , "microstrain_inertial_msgs/srv/GetZeroVelocityUpdateThreshold" => new_untyped_service_support_microstrain_inertial_msgs_srv_GetZeroVelocityUpdateThreshold , "microstrain_inertial_msgs/srv/InitFilterEuler" => new_untyped_service_support_microstrain_inertial_msgs_srv_InitFilterEuler , "microstrain_inertial_msgs/srv/InitFilterHeading" => new_untyped_service_support_microstrain_inertial_msgs_srv_InitFilterHeading , "microstrain_inertial_msgs/srv/SetAccelAdaptiveVals" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetAccelAdaptiveVals , "microstrain_inertial_msgs/srv/SetAccelBias" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetAccelBias , "microstrain_inertial_msgs/srv/SetAccelBiasModel" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetAccelBiasModel , "microstrain_inertial_msgs/srv/SetAccelNoise" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetAccelNoise , "microstrain_inertial_msgs/srv/SetComplementaryFilter" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetComplementaryFilter , "microstrain_inertial_msgs/srv/SetConingScullingComp" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetConingScullingComp , "microstrain_inertial_msgs/srv/SetDynamicsMode" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetDynamicsMode , "microstrain_inertial_msgs/srv/SetEstimationControlFlags" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetEstimationControlFlags , "microstrain_inertial_msgs/srv/SetFilterSpeedLeverArm" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetFilterSpeedLeverArm , "microstrain_inertial_msgs/srv/SetGravityAdaptiveVals" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetGravityAdaptiveVals , "microstrain_inertial_msgs/srv/SetGyroBias" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetGyroBias , "microstrain_inertial_msgs/srv/SetGyroBiasModel" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetGyroBiasModel , "microstrain_inertial_msgs/srv/SetGyroNoise" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetGyroNoise , "microstrain_inertial_msgs/srv/SetHardIronValues" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetHardIronValues , "microstrain_inertial_msgs/srv/SetHeadingSource" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetHeadingSource , "microstrain_inertial_msgs/srv/SetMagAdaptiveVals" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetMagAdaptiveVals , "microstrain_inertial_msgs/srv/SetMagDipAdaptiveVals" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetMagDipAdaptiveVals , "microstrain_inertial_msgs/srv/SetMagNoise" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetMagNoise , "microstrain_inertial_msgs/srv/SetReferencePosition" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetReferencePosition , "microstrain_inertial_msgs/srv/SetRelativePositionReference" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetRelativePositionReference , "microstrain_inertial_msgs/srv/SetSensor2VehicleOffset" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetSensor2VehicleOffset , "microstrain_inertial_msgs/srv/SetSensor2VehicleRotation" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetSensor2VehicleRotation , "microstrain_inertial_msgs/srv/SetSoftIronMatrix" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetSoftIronMatrix , "microstrain_inertial_msgs/srv/SetTareOrientation" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetTareOrientation , "microstrain_inertial_msgs/srv/SetZeroAngleUpdateThreshold" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetZeroAngleUpdateThreshold , "microstrain_inertial_msgs/srv/SetZeroVelocityUpdateThreshold" => new_untyped_service_support_microstrain_inertial_msgs_srv_SetZeroVelocityUpdateThreshold , "moveit_msgs/srv/ApplyPlanningScene" => new_untyped_service_support_moveit_msgs_srv_ApplyPlanningScene , "moveit_msgs/srv/ChangeControlDimensions" => new_untyped_service_support_moveit_msgs_srv_ChangeControlDimensions , "moveit_msgs/srv/ChangeDriftDimensions" => new_untyped_service_support_moveit_msgs_srv_ChangeDriftDimensions , "moveit_msgs/srv/CheckIfRobotStateExistsInWarehouse" => new_untyped_service_support_moveit_msgs_srv_CheckIfRobotStateExistsInWarehouse , "moveit_msgs/srv/DeleteRobotStateFromWarehouse" => new_untyped_service_support_moveit_msgs_srv_DeleteRobotStateFromWarehouse , "moveit_msgs/srv/ExecuteKnownTrajectory" => new_untyped_service_support_moveit_msgs_srv_ExecuteKnownTrajectory , "moveit_msgs/srv/GetCartesianPath" => new_untyped_service_support_moveit_msgs_srv_GetCartesianPath , "moveit_msgs/srv/GetMotionPlan" => new_untyped_service_support_moveit_msgs_srv_GetMotionPlan , "moveit_msgs/srv/GetMotionSequence" => new_untyped_service_support_moveit_msgs_srv_GetMotionSequence , "moveit_msgs/srv/GetPlannerParams" => new_untyped_service_support_moveit_msgs_srv_GetPlannerParams , "moveit_msgs/srv/GetPlanningScene" => new_untyped_service_support_moveit_msgs_srv_GetPlanningScene , "moveit_msgs/srv/GetPositionFK" => new_untyped_service_support_moveit_msgs_srv_GetPositionFK , "moveit_msgs/srv/GetPositionIK" => new_untyped_service_support_moveit_msgs_srv_GetPositionIK , "moveit_msgs/srv/GetRobotStateFromWarehouse" => new_untyped_service_support_moveit_msgs_srv_GetRobotStateFromWarehouse , "moveit_msgs/srv/GetStateValidity" => new_untyped_service_support_moveit_msgs_srv_GetStateValidity , "moveit_msgs/srv/GraspPlanning" => new_untyped_service_support_moveit_msgs_srv_GraspPlanning , "moveit_msgs/srv/ListRobotStatesInWarehouse" => new_untyped_service_support_moveit_msgs_srv_ListRobotStatesInWarehouse , "moveit_msgs/srv/LoadMap" => new_untyped_service_support_moveit_msgs_srv_LoadMap , "moveit_msgs/srv/QueryPlannerInterfaces" => new_untyped_service_support_moveit_msgs_srv_QueryPlannerInterfaces , "moveit_msgs/srv/RenameRobotStateInWarehouse" => new_untyped_service_support_moveit_msgs_srv_RenameRobotStateInWarehouse , "moveit_msgs/srv/SaveMap" => new_untyped_service_support_moveit_msgs_srv_SaveMap , "moveit_msgs/srv/SaveRobotStateToWarehouse" => new_untyped_service_support_moveit_msgs_srv_SaveRobotStateToWarehouse , "moveit_msgs/srv/SetPlannerParams" => new_untyped_service_support_moveit_msgs_srv_SetPlannerParams , "moveit_msgs/srv/UpdatePointcloudOctomap" => new_untyped_service_support_moveit_msgs_srv_UpdatePointcloudOctomap , "mrpt_msgs/srv/GetCMGraph" => new_untyped_service_support_mrpt_msgs_srv_GetCMGraph , "naoqi_bridge_msgs/srv/CmdPoseService" => new_untyped_service_support_naoqi_bridge_msgs_srv_CmdPoseService , "naoqi_bridge_msgs/srv/CmdVelService" => new_untyped_service_support_naoqi_bridge_msgs_srv_CmdVelService , "naoqi_bridge_msgs/srv/GetBodyROI" => new_untyped_service_support_naoqi_bridge_msgs_srv_GetBodyROI , "naoqi_bridge_msgs/srv/GetFacesROI" => new_untyped_service_support_naoqi_bridge_msgs_srv_GetFacesROI , "naoqi_bridge_msgs/srv/GetFloat" => new_untyped_service_support_naoqi_bridge_msgs_srv_GetFloat , "naoqi_bridge_msgs/srv/GetInstalledBehaviors" => new_untyped_service_support_naoqi_bridge_msgs_srv_GetInstalledBehaviors , "naoqi_bridge_msgs/srv/GetRobotInfo" => new_untyped_service_support_naoqi_bridge_msgs_srv_GetRobotInfo , "naoqi_bridge_msgs/srv/GetString" => new_untyped_service_support_naoqi_bridge_msgs_srv_GetString , "naoqi_bridge_msgs/srv/GetTruepose" => new_untyped_service_support_naoqi_bridge_msgs_srv_GetTruepose , "naoqi_bridge_msgs/srv/OrthogonalSecurityDistance" => new_untyped_service_support_naoqi_bridge_msgs_srv_OrthogonalSecurityDistance , "naoqi_bridge_msgs/srv/SetArmsEnabled" => new_untyped_service_support_naoqi_bridge_msgs_srv_SetArmsEnabled , "naoqi_bridge_msgs/srv/SetFloat" => new_untyped_service_support_naoqi_bridge_msgs_srv_SetFloat , "naoqi_bridge_msgs/srv/SetString" => new_untyped_service_support_naoqi_bridge_msgs_srv_SetString , "naoqi_bridge_msgs/srv/SetTransform" => new_untyped_service_support_naoqi_bridge_msgs_srv_SetTransform , "naoqi_bridge_msgs/srv/TangentialSecurityDistance" => new_untyped_service_support_naoqi_bridge_msgs_srv_TangentialSecurityDistance , "nav2_msgs/srv/ClearCostmapAroundRobot" => new_untyped_service_support_nav2_msgs_srv_ClearCostmapAroundRobot , "nav2_msgs/srv/ClearCostmapExceptRegion" => new_untyped_service_support_nav2_msgs_srv_ClearCostmapExceptRegion , "nav2_msgs/srv/ClearEntireCostmap" => new_untyped_service_support_nav2_msgs_srv_ClearEntireCostmap , "nav2_msgs/srv/GetCostmap" => new_untyped_service_support_nav2_msgs_srv_GetCostmap , "nav2_msgs/srv/LoadMap" => new_untyped_service_support_nav2_msgs_srv_LoadMap , "nav2_msgs/srv/ManageLifecycleNodes" => new_untyped_service_support_nav2_msgs_srv_ManageLifecycleNodes , "nav2_msgs/srv/SaveMap" => new_untyped_service_support_nav2_msgs_srv_SaveMap , "nav_msgs/srv/GetMap" => new_untyped_service_support_nav_msgs_srv_GetMap , "nav_msgs/srv/GetPlan" => new_untyped_service_support_nav_msgs_srv_GetPlan , "nav_msgs/srv/LoadMap" => new_untyped_service_support_nav_msgs_srv_LoadMap , "nav_msgs/srv/SetMap" => new_untyped_service_support_nav_msgs_srv_SetMap , "novatel_gps_msgs/srv/NovatelFRESET" => new_untyped_service_support_novatel_gps_msgs_srv_NovatelFRESET , "object_recognition_msgs/srv/GetObjectInformation" => new_untyped_service_support_object_recognition_msgs_srv_GetObjectInformation , "octomap_msgs/srv/BoundingBoxQuery" => new_untyped_service_support_octomap_msgs_srv_BoundingBoxQuery , "octomap_msgs/srv/GetOctomap" => new_untyped_service_support_octomap_msgs_srv_GetOctomap , "ouster_msgs/srv/GetMetadata" => new_untyped_service_support_ouster_msgs_srv_GetMetadata , "pcl_msgs/srv/UpdateFilename" => new_untyped_service_support_pcl_msgs_srv_UpdateFilename , "phidgets_msgs/srv/SetDigitalOutput" => new_untyped_service_support_phidgets_msgs_srv_SetDigitalOutput , "plansys2_msgs/srv/AddProblem" => new_untyped_service_support_plansys2_msgs_srv_AddProblem , "plansys2_msgs/srv/AddProblemGoal" => new_untyped_service_support_plansys2_msgs_srv_AddProblemGoal , "plansys2_msgs/srv/AffectNode" => new_untyped_service_support_plansys2_msgs_srv_AffectNode , "plansys2_msgs/srv/AffectParam" => new_untyped_service_support_plansys2_msgs_srv_AffectParam , "plansys2_msgs/srv/ClearProblemKnowledge" => new_untyped_service_support_plansys2_msgs_srv_ClearProblemKnowledge , "plansys2_msgs/srv/ExistNode" => new_untyped_service_support_plansys2_msgs_srv_ExistNode , "plansys2_msgs/srv/GetDomain" => new_untyped_service_support_plansys2_msgs_srv_GetDomain , "plansys2_msgs/srv/GetDomainActionDetails" => new_untyped_service_support_plansys2_msgs_srv_GetDomainActionDetails , "plansys2_msgs/srv/GetDomainActions" => new_untyped_service_support_plansys2_msgs_srv_GetDomainActions , "plansys2_msgs/srv/GetDomainConstants" => new_untyped_service_support_plansys2_msgs_srv_GetDomainConstants , "plansys2_msgs/srv/GetDomainDurativeActionDetails" => new_untyped_service_support_plansys2_msgs_srv_GetDomainDurativeActionDetails , "plansys2_msgs/srv/GetDomainName" => new_untyped_service_support_plansys2_msgs_srv_GetDomainName , "plansys2_msgs/srv/GetDomainTypes" => new_untyped_service_support_plansys2_msgs_srv_GetDomainTypes , "plansys2_msgs/srv/GetNodeDetails" => new_untyped_service_support_plansys2_msgs_srv_GetNodeDetails , "plansys2_msgs/srv/GetOrderedSubGoals" => new_untyped_service_support_plansys2_msgs_srv_GetOrderedSubGoals , "plansys2_msgs/srv/GetPlan" => new_untyped_service_support_plansys2_msgs_srv_GetPlan , "plansys2_msgs/srv/GetProblem" => new_untyped_service_support_plansys2_msgs_srv_GetProblem , "plansys2_msgs/srv/GetProblemGoal" => new_untyped_service_support_plansys2_msgs_srv_GetProblemGoal , "plansys2_msgs/srv/GetProblemInstanceDetails" => new_untyped_service_support_plansys2_msgs_srv_GetProblemInstanceDetails , "plansys2_msgs/srv/GetProblemInstances" => new_untyped_service_support_plansys2_msgs_srv_GetProblemInstances , "plansys2_msgs/srv/GetStates" => new_untyped_service_support_plansys2_msgs_srv_GetStates , "plansys2_msgs/srv/IsProblemGoalSatisfied" => new_untyped_service_support_plansys2_msgs_srv_IsProblemGoalSatisfied , "plansys2_msgs/srv/RemoveProblemGoal" => new_untyped_service_support_plansys2_msgs_srv_RemoveProblemGoal , "rc_common_msgs/srv/Trigger" => new_untyped_service_support_rc_common_msgs_srv_Trigger , "rc_reason_msgs/srv/CadMatchDetectObject" => new_untyped_service_support_rc_reason_msgs_srv_CadMatchDetectObject , "rc_reason_msgs/srv/CalibrateBasePlane" => new_untyped_service_support_rc_reason_msgs_srv_CalibrateBasePlane , "rc_reason_msgs/srv/ComputeGrasps" => new_untyped_service_support_rc_reason_msgs_srv_ComputeGrasps , "rc_reason_msgs/srv/DeleteBasePlaneCalibration" => new_untyped_service_support_rc_reason_msgs_srv_DeleteBasePlaneCalibration , "rc_reason_msgs/srv/DeleteLoadCarriers" => new_untyped_service_support_rc_reason_msgs_srv_DeleteLoadCarriers , "rc_reason_msgs/srv/DeleteRegionsOfInterest2D" => new_untyped_service_support_rc_reason_msgs_srv_DeleteRegionsOfInterest2D , "rc_reason_msgs/srv/DeleteRegionsOfInterest3D" => new_untyped_service_support_rc_reason_msgs_srv_DeleteRegionsOfInterest3D , "rc_reason_msgs/srv/DetectFillingLevel" => new_untyped_service_support_rc_reason_msgs_srv_DetectFillingLevel , "rc_reason_msgs/srv/DetectItems" => new_untyped_service_support_rc_reason_msgs_srv_DetectItems , "rc_reason_msgs/srv/DetectLoadCarriers" => new_untyped_service_support_rc_reason_msgs_srv_DetectLoadCarriers , "rc_reason_msgs/srv/DetectTags" => new_untyped_service_support_rc_reason_msgs_srv_DetectTags , "rc_reason_msgs/srv/GetBasePlaneCalibration" => new_untyped_service_support_rc_reason_msgs_srv_GetBasePlaneCalibration , "rc_reason_msgs/srv/GetLoadCarriers" => new_untyped_service_support_rc_reason_msgs_srv_GetLoadCarriers , "rc_reason_msgs/srv/GetRegionsOfInterest2D" => new_untyped_service_support_rc_reason_msgs_srv_GetRegionsOfInterest2D , "rc_reason_msgs/srv/GetRegionsOfInterest3D" => new_untyped_service_support_rc_reason_msgs_srv_GetRegionsOfInterest3D , "rc_reason_msgs/srv/HandEyeCalibration" => new_untyped_service_support_rc_reason_msgs_srv_HandEyeCalibration , "rc_reason_msgs/srv/HandEyeCalibrationTrigger" => new_untyped_service_support_rc_reason_msgs_srv_HandEyeCalibrationTrigger , "rc_reason_msgs/srv/SetHandEyeCalibration" => new_untyped_service_support_rc_reason_msgs_srv_SetHandEyeCalibration , "rc_reason_msgs/srv/SetHandEyeCalibrationPose" => new_untyped_service_support_rc_reason_msgs_srv_SetHandEyeCalibrationPose , "rc_reason_msgs/srv/SetLoadCarrier" => new_untyped_service_support_rc_reason_msgs_srv_SetLoadCarrier , "rc_reason_msgs/srv/SetRegionOfInterest2D" => new_untyped_service_support_rc_reason_msgs_srv_SetRegionOfInterest2D , "rc_reason_msgs/srv/SetRegionOfInterest3D" => new_untyped_service_support_rc_reason_msgs_srv_SetRegionOfInterest3D , "rc_reason_msgs/srv/SilhouetteMatchDetectObject" => new_untyped_service_support_rc_reason_msgs_srv_SilhouetteMatchDetectObject , "rcl_interfaces/srv/DescribeParameters" => new_untyped_service_support_rcl_interfaces_srv_DescribeParameters , "rcl_interfaces/srv/GetParameterTypes" => new_untyped_service_support_rcl_interfaces_srv_GetParameterTypes , "rcl_interfaces/srv/GetParameters" => new_untyped_service_support_rcl_interfaces_srv_GetParameters , "rcl_interfaces/srv/ListParameters" => new_untyped_service_support_rcl_interfaces_srv_ListParameters , "rcl_interfaces/srv/SetParameters" => new_untyped_service_support_rcl_interfaces_srv_SetParameters , "rcl_interfaces/srv/SetParametersAtomically" => new_untyped_service_support_rcl_interfaces_srv_SetParametersAtomically , "rclpy_message_converter_msgs/srv/NestedUint8ArrayTestService" => new_untyped_service_support_rclpy_message_converter_msgs_srv_NestedUint8ArrayTestService , "realsense2_camera_msgs/srv/DeviceInfo" => new_untyped_service_support_realsense2_camera_msgs_srv_DeviceInfo , "rmf_building_map_msgs/srv/GetBuildingMap" => new_untyped_service_support_rmf_building_map_msgs_srv_GetBuildingMap , "rmf_fleet_msgs/srv/LiftClearance" => new_untyped_service_support_rmf_fleet_msgs_srv_LiftClearance , "rmf_task_msgs/srv/CancelTask" => new_untyped_service_support_rmf_task_msgs_srv_CancelTask , "rmf_task_msgs/srv/GetTaskList" => new_untyped_service_support_rmf_task_msgs_srv_GetTaskList , "rmf_task_msgs/srv/ReviveTask" => new_untyped_service_support_rmf_task_msgs_srv_ReviveTask , "rmf_task_msgs/srv/SubmitTask" => new_untyped_service_support_rmf_task_msgs_srv_SubmitTask , "rmf_traffic_msgs/srv/RegisterParticipant" => new_untyped_service_support_rmf_traffic_msgs_srv_RegisterParticipant , "rmf_traffic_msgs/srv/RegisterQuery" => new_untyped_service_support_rmf_traffic_msgs_srv_RegisterQuery , "rmf_traffic_msgs/srv/RequestChanges" => new_untyped_service_support_rmf_traffic_msgs_srv_RequestChanges , "rmf_traffic_msgs/srv/UnregisterParticipant" => new_untyped_service_support_rmf_traffic_msgs_srv_UnregisterParticipant , "robot_localization/srv/FromLL" => new_untyped_service_support_robot_localization_srv_FromLL , "robot_localization/srv/GetState" => new_untyped_service_support_robot_localization_srv_GetState , "robot_localization/srv/SetDatum" => new_untyped_service_support_robot_localization_srv_SetDatum , "robot_localization/srv/SetPose" => new_untyped_service_support_robot_localization_srv_SetPose , "robot_localization/srv/ToLL" => new_untyped_service_support_robot_localization_srv_ToLL , "robot_localization/srv/ToggleFilterProcessing" => new_untyped_service_support_robot_localization_srv_ToggleFilterProcessing , "ros2cli_test_interfaces/srv/ShortVariedMultiNested" => new_untyped_service_support_ros2cli_test_interfaces_srv_ShortVariedMultiNested , "ros_ign_interfaces/srv/ControlWorld" => new_untyped_service_support_ros_ign_interfaces_srv_ControlWorld , "ros_ign_interfaces/srv/DeleteEntity" => new_untyped_service_support_ros_ign_interfaces_srv_DeleteEntity , "ros_ign_interfaces/srv/SetEntityPose" => new_untyped_service_support_ros_ign_interfaces_srv_SetEntityPose , "ros_ign_interfaces/srv/SpawnEntity" => new_untyped_service_support_ros_ign_interfaces_srv_SpawnEntity , "rosapi_msgs/srv/DeleteParam" => new_untyped_service_support_rosapi_msgs_srv_DeleteParam , "rosapi_msgs/srv/GetActionServers" => new_untyped_service_support_rosapi_msgs_srv_GetActionServers , "rosapi_msgs/srv/GetParam" => new_untyped_service_support_rosapi_msgs_srv_GetParam , "rosapi_msgs/srv/GetParamNames" => new_untyped_service_support_rosapi_msgs_srv_GetParamNames , "rosapi_msgs/srv/GetROSVersion" => new_untyped_service_support_rosapi_msgs_srv_GetROSVersion , "rosapi_msgs/srv/GetTime" => new_untyped_service_support_rosapi_msgs_srv_GetTime , "rosapi_msgs/srv/HasParam" => new_untyped_service_support_rosapi_msgs_srv_HasParam , "rosapi_msgs/srv/MessageDetails" => new_untyped_service_support_rosapi_msgs_srv_MessageDetails , "rosapi_msgs/srv/NodeDetails" => new_untyped_service_support_rosapi_msgs_srv_NodeDetails , "rosapi_msgs/srv/Nodes" => new_untyped_service_support_rosapi_msgs_srv_Nodes , "rosapi_msgs/srv/Publishers" => new_untyped_service_support_rosapi_msgs_srv_Publishers , "rosapi_msgs/srv/ServiceNode" => new_untyped_service_support_rosapi_msgs_srv_ServiceNode , "rosapi_msgs/srv/ServiceProviders" => new_untyped_service_support_rosapi_msgs_srv_ServiceProviders , "rosapi_msgs/srv/ServiceRequestDetails" => new_untyped_service_support_rosapi_msgs_srv_ServiceRequestDetails , "rosapi_msgs/srv/ServiceResponseDetails" => new_untyped_service_support_rosapi_msgs_srv_ServiceResponseDetails , "rosapi_msgs/srv/ServiceType" => new_untyped_service_support_rosapi_msgs_srv_ServiceType , "rosapi_msgs/srv/Services" => new_untyped_service_support_rosapi_msgs_srv_Services , "rosapi_msgs/srv/ServicesForType" => new_untyped_service_support_rosapi_msgs_srv_ServicesForType , "rosapi_msgs/srv/SetParam" => new_untyped_service_support_rosapi_msgs_srv_SetParam , "rosapi_msgs/srv/Subscribers" => new_untyped_service_support_rosapi_msgs_srv_Subscribers , "rosapi_msgs/srv/TopicType" => new_untyped_service_support_rosapi_msgs_srv_TopicType , "rosapi_msgs/srv/Topics" => new_untyped_service_support_rosapi_msgs_srv_Topics , "rosapi_msgs/srv/TopicsAndRawTypes" => new_untyped_service_support_rosapi_msgs_srv_TopicsAndRawTypes , "rosapi_msgs/srv/TopicsForType" => new_untyped_service_support_rosapi_msgs_srv_TopicsForType , "rosbag2_interfaces/srv/GetRate" => new_untyped_service_support_rosbag2_interfaces_srv_GetRate , "rosbag2_interfaces/srv/IsPaused" => new_untyped_service_support_rosbag2_interfaces_srv_IsPaused , "rosbag2_interfaces/srv/Pause" => new_untyped_service_support_rosbag2_interfaces_srv_Pause , "rosbag2_interfaces/srv/PlayNext" => new_untyped_service_support_rosbag2_interfaces_srv_PlayNext , "rosbag2_interfaces/srv/Resume" => new_untyped_service_support_rosbag2_interfaces_srv_Resume , "rosbag2_interfaces/srv/Seek" => new_untyped_service_support_rosbag2_interfaces_srv_Seek , "rosbag2_interfaces/srv/SetRate" => new_untyped_service_support_rosbag2_interfaces_srv_SetRate , "rosbag2_interfaces/srv/TogglePaused" => new_untyped_service_support_rosbag2_interfaces_srv_TogglePaused , "rosbridge_test_msgs/srv/AddTwoInts" => new_untyped_service_support_rosbridge_test_msgs_srv_AddTwoInts , "rosbridge_test_msgs/srv/SendBytes" => new_untyped_service_support_rosbridge_test_msgs_srv_SendBytes , "rosbridge_test_msgs/srv/TestArrayRequest" => new_untyped_service_support_rosbridge_test_msgs_srv_TestArrayRequest , "rosbridge_test_msgs/srv/TestEmpty" => new_untyped_service_support_rosbridge_test_msgs_srv_TestEmpty , "rosbridge_test_msgs/srv/TestMultipleRequestFields" => new_untyped_service_support_rosbridge_test_msgs_srv_TestMultipleRequestFields , "rosbridge_test_msgs/srv/TestMultipleResponseFields" => new_untyped_service_support_rosbridge_test_msgs_srv_TestMultipleResponseFields , "rosbridge_test_msgs/srv/TestNestedService" => new_untyped_service_support_rosbridge_test_msgs_srv_TestNestedService , "rosbridge_test_msgs/srv/TestRequestAndResponse" => new_untyped_service_support_rosbridge_test_msgs_srv_TestRequestAndResponse , "rosbridge_test_msgs/srv/TestRequestOnly" => new_untyped_service_support_rosbridge_test_msgs_srv_TestRequestOnly , "rosbridge_test_msgs/srv/TestResponseOnly" => new_untyped_service_support_rosbridge_test_msgs_srv_TestResponseOnly , "rtabmap_ros/srv/AddLink" => new_untyped_service_support_rtabmap_ros_srv_AddLink , "rtabmap_ros/srv/CleanupLocalGrids" => new_untyped_service_support_rtabmap_ros_srv_CleanupLocalGrids , "rtabmap_ros/srv/DetectMoreLoopClosures" => new_untyped_service_support_rtabmap_ros_srv_DetectMoreLoopClosures , "rtabmap_ros/srv/GetMap" => new_untyped_service_support_rtabmap_ros_srv_GetMap , "rtabmap_ros/srv/GetMap2" => new_untyped_service_support_rtabmap_ros_srv_GetMap2 , "rtabmap_ros/srv/GetNodeData" => new_untyped_service_support_rtabmap_ros_srv_GetNodeData , "rtabmap_ros/srv/GetNodesInRadius" => new_untyped_service_support_rtabmap_ros_srv_GetNodesInRadius , "rtabmap_ros/srv/GetPlan" => new_untyped_service_support_rtabmap_ros_srv_GetPlan , "rtabmap_ros/srv/GlobalBundleAdjustment" => new_untyped_service_support_rtabmap_ros_srv_GlobalBundleAdjustment , "rtabmap_ros/srv/ListLabels" => new_untyped_service_support_rtabmap_ros_srv_ListLabels , "rtabmap_ros/srv/LoadDatabase" => new_untyped_service_support_rtabmap_ros_srv_LoadDatabase , "rtabmap_ros/srv/PublishMap" => new_untyped_service_support_rtabmap_ros_srv_PublishMap , "rtabmap_ros/srv/RemoveLabel" => new_untyped_service_support_rtabmap_ros_srv_RemoveLabel , "rtabmap_ros/srv/ResetPose" => new_untyped_service_support_rtabmap_ros_srv_ResetPose , "rtabmap_ros/srv/SetGoal" => new_untyped_service_support_rtabmap_ros_srv_SetGoal , "rtabmap_ros/srv/SetLabel" => new_untyped_service_support_rtabmap_ros_srv_SetLabel , "sensor_msgs/srv/SetCameraInfo" => new_untyped_service_support_sensor_msgs_srv_SetCameraInfo , "sick_safetyscanners2_interfaces/srv/FieldData" => new_untyped_service_support_sick_safetyscanners2_interfaces_srv_FieldData , "slam_toolbox/srv/AddSubmap" => new_untyped_service_support_slam_toolbox_srv_AddSubmap , "slam_toolbox/srv/Clear" => new_untyped_service_support_slam_toolbox_srv_Clear , "slam_toolbox/srv/ClearQueue" => new_untyped_service_support_slam_toolbox_srv_ClearQueue , "slam_toolbox/srv/DeserializePoseGraph" => new_untyped_service_support_slam_toolbox_srv_DeserializePoseGraph , "slam_toolbox/srv/LoopClosure" => new_untyped_service_support_slam_toolbox_srv_LoopClosure , "slam_toolbox/srv/MergeMaps" => new_untyped_service_support_slam_toolbox_srv_MergeMaps , "slam_toolbox/srv/Pause" => new_untyped_service_support_slam_toolbox_srv_Pause , "slam_toolbox/srv/SaveMap" => new_untyped_service_support_slam_toolbox_srv_SaveMap , "slam_toolbox/srv/SerializePoseGraph" => new_untyped_service_support_slam_toolbox_srv_SerializePoseGraph , "slam_toolbox/srv/ToggleInteractive" => new_untyped_service_support_slam_toolbox_srv_ToggleInteractive , "smacc2_msgs/srv/SmaccGetTransitionHistory" => new_untyped_service_support_smacc2_msgs_srv_SmaccGetTransitionHistory , "spatio_temporal_voxel_layer/srv/SaveGrid" => new_untyped_service_support_spatio_temporal_voxel_layer_srv_SaveGrid , "std_srvs/srv/Empty" => new_untyped_service_support_std_srvs_srv_Empty , "std_srvs/srv/SetBool" => new_untyped_service_support_std_srvs_srv_SetBool , "std_srvs/srv/Trigger" => new_untyped_service_support_std_srvs_srv_Trigger , "system_modes_msgs/srv/ChangeMode" => new_untyped_service_support_system_modes_msgs_srv_ChangeMode , "system_modes_msgs/srv/GetAvailableModes" => new_untyped_service_support_system_modes_msgs_srv_GetAvailableModes , "system_modes_msgs/srv/GetMode" => new_untyped_service_support_system_modes_msgs_srv_GetMode , "test_bond/srv/TestBond" => new_untyped_service_support_test_bond_srv_TestBond , "test_msgs/srv/Arrays" => new_untyped_service_support_test_msgs_srv_Arrays , "test_msgs/srv/BasicTypes" => new_untyped_service_support_test_msgs_srv_BasicTypes , "test_msgs/srv/Empty" => new_untyped_service_support_test_msgs_srv_Empty , "tf2_msgs/srv/FrameGraph" => new_untyped_service_support_tf2_msgs_srv_FrameGraph , "topic_tools_interfaces/srv/MuxAdd" => new_untyped_service_support_topic_tools_interfaces_srv_MuxAdd , "topic_tools_interfaces/srv/MuxDelete" => new_untyped_service_support_topic_tools_interfaces_srv_MuxDelete , "topic_tools_interfaces/srv/MuxList" => new_untyped_service_support_topic_tools_interfaces_srv_MuxList , "topic_tools_interfaces/srv/MuxSelect" => new_untyped_service_support_topic_tools_interfaces_srv_MuxSelect , "turtlebot3_msgs/srv/Dqn" => new_untyped_service_support_turtlebot3_msgs_srv_Dqn , "turtlebot3_msgs/srv/Sound" => new_untyped_service_support_turtlebot3_msgs_srv_Sound , "turtlesim/srv/Kill" => new_untyped_service_support_turtlesim_srv_Kill , "turtlesim/srv/SetPen" => new_untyped_service_support_turtlesim_srv_SetPen , "turtlesim/srv/Spawn" => new_untyped_service_support_turtlesim_srv_Spawn , "turtlesim/srv/TeleportAbsolute" => new_untyped_service_support_turtlesim_srv_TeleportAbsolute , "turtlesim/srv/TeleportRelative" => new_untyped_service_support_turtlesim_srv_TeleportRelative , "ublox_ubx_interfaces/srv/ColdStart" => new_untyped_service_support_ublox_ubx_interfaces_srv_ColdStart , "ublox_ubx_interfaces/srv/HotStart" => new_untyped_service_support_ublox_ubx_interfaces_srv_HotStart , "ublox_ubx_interfaces/srv/ResetODO" => new_untyped_service_support_ublox_ubx_interfaces_srv_ResetODO , "ublox_ubx_interfaces/srv/WarmStart" => new_untyped_service_support_ublox_ubx_interfaces_srv_WarmStart , "udp_msgs/srv/UdpSend" => new_untyped_service_support_udp_msgs_srv_UdpSend , "udp_msgs/srv/UdpSocket" => new_untyped_service_support_udp_msgs_srv_UdpSocket , "ur_dashboard_msgs/srv/AddToLog" => new_untyped_service_support_ur_dashboard_msgs_srv_AddToLog , "ur_dashboard_msgs/srv/GetLoadedProgram" => new_untyped_service_support_ur_dashboard_msgs_srv_GetLoadedProgram , "ur_dashboard_msgs/srv/GetProgramState" => new_untyped_service_support_ur_dashboard_msgs_srv_GetProgramState , "ur_dashboard_msgs/srv/GetRobotMode" => new_untyped_service_support_ur_dashboard_msgs_srv_GetRobotMode , "ur_dashboard_msgs/srv/GetSafetyMode" => new_untyped_service_support_ur_dashboard_msgs_srv_GetSafetyMode , "ur_dashboard_msgs/srv/IsProgramRunning" => new_untyped_service_support_ur_dashboard_msgs_srv_IsProgramRunning , "ur_dashboard_msgs/srv/IsProgramSaved" => new_untyped_service_support_ur_dashboard_msgs_srv_IsProgramSaved , "ur_dashboard_msgs/srv/Load" => new_untyped_service_support_ur_dashboard_msgs_srv_Load , "ur_dashboard_msgs/srv/Popup" => new_untyped_service_support_ur_dashboard_msgs_srv_Popup , "ur_dashboard_msgs/srv/RawRequest" => new_untyped_service_support_ur_dashboard_msgs_srv_RawRequest , "ur_msgs/srv/SetIO" => new_untyped_service_support_ur_msgs_srv_SetIO , "ur_msgs/srv/SetPayload" => new_untyped_service_support_ur_msgs_srv_SetPayload , "ur_msgs/srv/SetSpeedSliderFraction" => new_untyped_service_support_ur_msgs_srv_SetSpeedSliderFraction , "vda5050_connector/srv/GetState" => new_untyped_service_support_vda5050_connector_srv_GetState , "vda5050_connector/srv/SupportedActions" => new_untyped_service_support_vda5050_connector_srv_SupportedActions , "visualization_msgs/srv/GetInteractiveMarkers" => new_untyped_service_support_visualization_msgs_srv_GetInteractiveMarkers , "webots_ros2_msgs/srv/SetInt" => new_untyped_service_support_webots_ros2_msgs_srv_SetInt , "webots_ros2_msgs/srv/SpawnUrdfRobot" => new_untyped_service_support_webots_ros2_msgs_srv_SpawnUrdfRobot } ; let func = MAP . get (typename) . ok_or_else (|| Error :: InvalidMessageType { msgtype : typename . into () }) ? ; Ok (func ()) } }